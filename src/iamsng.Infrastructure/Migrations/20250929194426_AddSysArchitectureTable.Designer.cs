// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iamsng.Infrastructure.Data;

#nullable disable

namespace iamsng.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250929194426_AddSysArchitectureTable")]
    partial class AddSysArchitectureTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("iamsng.Core.Entities.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("building_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("building_number")
                        .HasComment("Unique building identifier/number");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("BuildingId")
                        .HasName("PK_building");

                    b.HasIndex("BuildingNumber")
                        .IsUnique()
                        .HasDatabaseName("UX_building_number");

                    b.ToTable("building", null, t =>
                        {
                            t.HasComment("Physical buildings where assets and equipment are located");
                        });

                    b.HasData(
                        new
                        {
                            BuildingId = 1,
                            BuildingNumber = "Building 370",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 2,
                            BuildingNumber = "Building 010",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 3,
                            BuildingNumber = "Building 012",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 4,
                            BuildingNumber = "Building 001",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 5,
                            BuildingNumber = "Building 014",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 6,
                            BuildingNumber = "Building 350",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 7,
                            BuildingNumber = "Building 377",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 8,
                            BuildingNumber = "Building 403",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Condition", b =>
                {
                    b.Property<int>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("condition_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConditionId"));

                    b.Property<string>("ConditionDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("condition_description")
                        .HasComment("Detailed description of what this condition means");

                    b.Property<string>("ConditionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("condition_name")
                        .HasComment("Name or label of the condition state");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("ConditionId")
                        .HasName("PK_condition");

                    b.HasIndex("ConditionName")
                        .IsUnique()
                        .HasDatabaseName("IX_condition_name");

                    b.ToTable("condition", null, t =>
                        {
                            t.HasComment("Asset condition states for lifecycle and maintenance tracking");
                        });

                    b.HasData(
                        new
                        {
                            ConditionId = 1,
                            ConditionDescription = "Device is brand new, unused, and in original packaging",
                            ConditionName = "New",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 2,
                            ConditionDescription = "Device is in like-new condition with no visible wear or defects",
                            ConditionName = "Excellent",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 3,
                            ConditionDescription = "Device is fully functional with minor cosmetic wear but no operational issues",
                            ConditionName = "Good",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 4,
                            ConditionDescription = "Device is functional but shows moderate wear or has minor non-critical issues",
                            ConditionName = "Fair",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 5,
                            ConditionDescription = "Device has significant wear or operational issues but remains usable",
                            ConditionName = "Poor",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 6,
                            ConditionDescription = "Device is not operational and requires repair or replacement",
                            ConditionName = "Non-Functional",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 7,
                            ConditionDescription = "Device is currently being serviced or repaired",
                            ConditionName = "Under Repair",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 8,
                            ConditionDescription = "Device has been marked for disposal or decommissioning",
                            ConditionName = "Awaiting Disposal",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 9,
                            ConditionDescription = "Device has been properly disposed of or decommissioned",
                            ConditionName = "Disposed",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 10,
                            ConditionDescription = "Device cannot be located and is considered missing from inventory",
                            ConditionName = "Missing",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 11,
                            ConditionDescription = "Device has physical damage affecting functionality or safety",
                            ConditionName = "Damaged",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 12,
                            ConditionDescription = "Device is outdated and no longer supported for operational use",
                            ConditionName = "Obsolete",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(650), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.CpuType", b =>
                {
                    b.Property<int>("CpuTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cpu_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CpuTypeId"));

                    b.Property<string>("CpuTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cpu_type_name")
                        .HasComment("Name or designation of the CPU model/series");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("HardwareManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id")
                        .HasComment("Foreign key to hardware_manufacturer table");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("CpuTypeId")
                        .HasName("PK_cpu_type");

                    b.HasIndex("CpuTypeName")
                        .HasDatabaseName("IX_cpu_type_name");

                    b.HasIndex("HardwareManufacturerId")
                        .HasDatabaseName("IX_cpu_type_manufacturer");

                    b.HasIndex("CpuTypeName", "HardwareManufacturerId")
                        .HasDatabaseName("IX_cpu_type_name_manufacturer");

                    b.ToTable("cpu_type", null, t =>
                        {
                            t.HasComment("CPU types and models from various manufacturers");
                        });

                    b.HasData(
                        new
                        {
                            CpuTypeId = 1,
                            CpuTypeName = "Core i9 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 2,
                            CpuTypeName = "Core i7 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 3,
                            CpuTypeName = "Core i5 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 4,
                            CpuTypeName = "Core i3 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 5,
                            CpuTypeName = "Core i9 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 6,
                            CpuTypeName = "Core i7 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 7,
                            CpuTypeName = "Core i5 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 8,
                            CpuTypeName = "Core i3 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 9,
                            CpuTypeName = "Core i9 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 10,
                            CpuTypeName = "Core i7 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 11,
                            CpuTypeName = "Core i5 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 12,
                            CpuTypeName = "Core i3 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 13,
                            CpuTypeName = "Core i9 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 14,
                            CpuTypeName = "Core i7 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 15,
                            CpuTypeName = "Core i5 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 16,
                            CpuTypeName = "Core i3 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 17,
                            CpuTypeName = "Core i9 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 18,
                            CpuTypeName = "Core i7 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 19,
                            CpuTypeName = "Core i5 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 20,
                            CpuTypeName = "Core i3 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 21,
                            CpuTypeName = "Core i9 9th Gen (Coffee Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 22,
                            CpuTypeName = "Core i7 9th Gen (Coffee Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 23,
                            CpuTypeName = "Core i5 9th Gen (Coffee Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 24,
                            CpuTypeName = "Core i7 8th Gen (Coffee Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 25,
                            CpuTypeName = "Core i5 8th Gen (Coffee Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 26,
                            CpuTypeName = "Core i7 7th Gen (Kaby Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 27,
                            CpuTypeName = "Core i5 7th Gen (Kaby Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 28,
                            CpuTypeName = "Core i7 6th Gen (Skylake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 29,
                            CpuTypeName = "Core i5 6th Gen (Skylake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 30,
                            CpuTypeName = "Core i7 4th Gen (Haswell)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 31,
                            CpuTypeName = "Core i5 4th Gen (Haswell)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 32,
                            CpuTypeName = "Core i7 3rd Gen (Ivy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 33,
                            CpuTypeName = "Core i5 3rd Gen (Ivy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 34,
                            CpuTypeName = "Core i7 2nd Gen (Sandy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 35,
                            CpuTypeName = "Core i5 2nd Gen (Sandy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 36,
                            CpuTypeName = "Core 2 Quad",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 37,
                            CpuTypeName = "Core 2 Duo",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 38,
                            CpuTypeName = "Xeon Scalable 5th Gen (Emerald Rapids)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 39,
                            CpuTypeName = "Xeon Scalable 4th Gen (Sapphire Rapids)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 40,
                            CpuTypeName = "Xeon Scalable 3rd Gen (Ice Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 41,
                            CpuTypeName = "Xeon Scalable 2nd Gen (Cascade Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 42,
                            CpuTypeName = "Xeon Scalable 1st Gen (Skylake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 43,
                            CpuTypeName = "Xeon E7 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 44,
                            CpuTypeName = "Xeon E5 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 45,
                            CpuTypeName = "Xeon E3 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 46,
                            CpuTypeName = "Xeon W-3400 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 47,
                            CpuTypeName = "Xeon W-2400 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 48,
                            CpuTypeName = "Xeon W Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 49,
                            CpuTypeName = "Xeon D Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 50,
                            CpuTypeName = "Xeon Phi",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 51,
                            CpuTypeName = "Pentium Gold Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 52,
                            CpuTypeName = "Pentium Silver Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 53,
                            CpuTypeName = "Pentium 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 54,
                            CpuTypeName = "Pentium III",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 55,
                            CpuTypeName = "Celeron Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 56,
                            CpuTypeName = "Atom x7 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 57,
                            CpuTypeName = "Atom x5 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 58,
                            CpuTypeName = "Atom C Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 59,
                            CpuTypeName = "Ryzen 9 7950X3D",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 60,
                            CpuTypeName = "Ryzen 9 7950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 61,
                            CpuTypeName = "Ryzen 9 7900X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 62,
                            CpuTypeName = "Ryzen 7 7800X3D",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 63,
                            CpuTypeName = "Ryzen 7 7700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 64,
                            CpuTypeName = "Ryzen 5 7600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 65,
                            CpuTypeName = "Ryzen 9 5950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 66,
                            CpuTypeName = "Ryzen 9 5900X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 67,
                            CpuTypeName = "Ryzen 7 5800X3D",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 68,
                            CpuTypeName = "Ryzen 7 5800X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 69,
                            CpuTypeName = "Ryzen 7 5700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 70,
                            CpuTypeName = "Ryzen 5 5600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 71,
                            CpuTypeName = "Ryzen 5 5600",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 72,
                            CpuTypeName = "Ryzen 3 5300G",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 73,
                            CpuTypeName = "Ryzen 9 3950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 74,
                            CpuTypeName = "Ryzen 9 3900X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 75,
                            CpuTypeName = "Ryzen 7 3800X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 76,
                            CpuTypeName = "Ryzen 7 3700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 77,
                            CpuTypeName = "Ryzen 5 3600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 78,
                            CpuTypeName = "Ryzen 5 3600",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 79,
                            CpuTypeName = "Ryzen 7 2700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 80,
                            CpuTypeName = "Ryzen 5 2600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 81,
                            CpuTypeName = "Ryzen 7 1800X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 82,
                            CpuTypeName = "Ryzen 5 1600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 83,
                            CpuTypeName = "Ryzen Threadripper 7980X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 84,
                            CpuTypeName = "Ryzen Threadripper 7970X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 85,
                            CpuTypeName = "Ryzen Threadripper PRO 7995WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 86,
                            CpuTypeName = "Ryzen Threadripper PRO 7985WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 87,
                            CpuTypeName = "Ryzen Threadripper PRO 5995WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 88,
                            CpuTypeName = "Ryzen Threadripper PRO 5975WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 89,
                            CpuTypeName = "Ryzen Threadripper 3990X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 90,
                            CpuTypeName = "Ryzen Threadripper 3970X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 91,
                            CpuTypeName = "Ryzen Threadripper 2990WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 92,
                            CpuTypeName = "Ryzen Threadripper 1950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 93,
                            CpuTypeName = "EPYC 9754 (Genoa)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 94,
                            CpuTypeName = "EPYC 9654 (Genoa)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 95,
                            CpuTypeName = "EPYC 9554 (Genoa)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 96,
                            CpuTypeName = "EPYC 9374F (Genoa-X)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 97,
                            CpuTypeName = "EPYC 7773X (Milan-X)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 98,
                            CpuTypeName = "EPYC 7763 (Milan)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 99,
                            CpuTypeName = "EPYC 7713 (Milan)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 100,
                            CpuTypeName = "EPYC 7H12 (Rome)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 101,
                            CpuTypeName = "EPYC 7742 (Rome)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 102,
                            CpuTypeName = "EPYC 7601 (Naples)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 103,
                            CpuTypeName = "EPYC 7551 (Naples)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 104,
                            CpuTypeName = "Athlon 3000G",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 105,
                            CpuTypeName = "Athlon 200GE",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 106,
                            CpuTypeName = "Athlon 64 X2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 107,
                            CpuTypeName = "Athlon 64",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 108,
                            CpuTypeName = "Opteron 6000 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 109,
                            CpuTypeName = "FX-8350",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 110,
                            CpuTypeName = "FX-8150",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 111,
                            CpuTypeName = "A10 APU Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 112,
                            CpuTypeName = "A8 APU Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 113,
                            CpuTypeName = "A6 APU Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 114,
                            CpuTypeName = "M3 Max",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 115,
                            CpuTypeName = "M3 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 116,
                            CpuTypeName = "M3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 117,
                            CpuTypeName = "M2 Ultra",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 118,
                            CpuTypeName = "M2 Max",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 119,
                            CpuTypeName = "M2 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 120,
                            CpuTypeName = "M2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 121,
                            CpuTypeName = "M1 Ultra",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 122,
                            CpuTypeName = "M1 Max",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 123,
                            CpuTypeName = "M1 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 124,
                            CpuTypeName = "M1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 125,
                            CpuTypeName = "A17 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 126,
                            CpuTypeName = "A16 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 127,
                            CpuTypeName = "A15 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 128,
                            CpuTypeName = "A14 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 129,
                            CpuTypeName = "A13 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 130,
                            CpuTypeName = "A12 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 131,
                            CpuTypeName = "Snapdragon 8 Gen 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 132,
                            CpuTypeName = "Snapdragon 8 Gen 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 133,
                            CpuTypeName = "Snapdragon 8 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 134,
                            CpuTypeName = "Snapdragon 888",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 135,
                            CpuTypeName = "Snapdragon 865",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 136,
                            CpuTypeName = "Snapdragon 7+ Gen 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 137,
                            CpuTypeName = "Snapdragon 7 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 138,
                            CpuTypeName = "Snapdragon 6 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 139,
                            CpuTypeName = "Snapdragon 4 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 140,
                            CpuTypeName = "Cortex-A78",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 141,
                            CpuTypeName = "Cortex-A77",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 142,
                            CpuTypeName = "Cortex-A76",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 143,
                            CpuTypeName = "Cortex-A75",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 144,
                            CpuTypeName = "Cortex-A73",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 145,
                            CpuTypeName = "Cortex-A72",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 146,
                            CpuTypeName = "Cortex-R82",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 147,
                            CpuTypeName = "Cortex-R52",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 148,
                            CpuTypeName = "Cortex-M85",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 149,
                            CpuTypeName = "Cortex-M55",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 150,
                            CpuTypeName = "Cortex-M33",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 151,
                            CpuTypeName = "Neoverse V2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 152,
                            CpuTypeName = "Neoverse N2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 153,
                            CpuTypeName = "Neoverse N1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 154,
                            CpuTypeName = "POWER10",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 155,
                            CpuTypeName = "POWER9",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 156,
                            CpuTypeName = "POWER8",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 157,
                            CpuTypeName = "POWER7",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 158,
                            CpuTypeName = "SPARC M8",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 167,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 159,
                            CpuTypeName = "SPARC M7",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 167,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 160,
                            CpuTypeName = "SPARC T5",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 167,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 161,
                            CpuTypeName = "Graviton3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 168,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 162,
                            CpuTypeName = "Graviton2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 168,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 163,
                            CpuTypeName = "Graviton",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 168,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 164,
                            CpuTypeName = "Dimensity 9300",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 165,
                            CpuTypeName = "Dimensity 9200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 166,
                            CpuTypeName = "Dimensity 9000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 167,
                            CpuTypeName = "Dimensity 8300",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 168,
                            CpuTypeName = "Dimensity 8200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 169,
                            CpuTypeName = "Dimensity 7200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 170,
                            CpuTypeName = "Exynos 2400",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 63,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 171,
                            CpuTypeName = "Exynos 2200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 63,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 172,
                            CpuTypeName = "Exynos 2100",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 63,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 173,
                            CpuTypeName = "Kirin 9000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 31,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 174,
                            CpuTypeName = "Kirin 990",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 31,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 175,
                            CpuTypeName = "Loongson 3A6000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 169,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 176,
                            CpuTypeName = "Loongson 3A5000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 169,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 177,
                            CpuTypeName = "Godson (龙芯)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 169,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 178,
                            CpuTypeName = "Zhaoxin KX-6000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 170,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 179,
                            CpuTypeName = "VIA C7",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 171,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 180,
                            CpuTypeName = "Phytium FT-2000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 172,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("floor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("FloorNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("floor_number")
                        .HasComment("Unique floor identifier/number");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("FloorId")
                        .HasName("PK_floor");

                    b.HasIndex("FloorNumber")
                        .IsUnique()
                        .HasDatabaseName("UX_floor_number");

                    b.ToTable("floor", null, t =>
                        {
                            t.HasComment("Floor/level definitions that exist across multiple buildings");
                        });

                    b.HasData(
                        new
                        {
                            FloorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorNumber = "Floor 001",
                            Version = 1
                        },
                        new
                        {
                            FloorId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorNumber = "Floor 002",
                            Version = 1
                        },
                        new
                        {
                            FloorId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorNumber = "Floor Ground",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.GpuType", b =>
                {
                    b.Property<int>("GpuTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gpu_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GpuTypeId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("GpuTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gpu_type_name")
                        .HasComment("Name or designation of the GPU model/series");

                    b.Property<int>("HardwareManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id")
                        .HasComment("Foreign key to hardware_manufacturer table");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("GpuTypeId")
                        .HasName("PK_gpu_types");

                    b.HasIndex("GpuTypeName")
                        .HasDatabaseName("IX_gpu_types_name");

                    b.HasIndex("HardwareManufacturerId")
                        .HasDatabaseName("IX_gpu_types_manufacturer");

                    b.ToTable("gpu_types", null, t =>
                        {
                            t.HasComment("GPU types and models from various manufacturers");
                        });

                    b.HasData(
                        new
                        {
                            GpuTypeId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce RTX 40 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce RTX 30 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce RTX 20 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 16 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 10 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 900 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 700 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro RTX Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro P Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro M Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro K Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "RTX A Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla V100",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla P100",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla K80",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla M Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "A100 Tensor Core",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "H100 Tensor Core",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "L40S",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "T4 Tensor Core",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 7000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 6000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 5000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX Vega Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 500 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 400 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro W7000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro W6000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro W5000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro WX Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro Vega Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "FirePro W Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "FirePro S Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Instinct MI300 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Instinct MI200 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Instinct MI100 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Arc A Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Iris Xe Graphics",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "UHD Graphics 700 Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "UHD Graphics 600 Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "HD Graphics 500 Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 371, DateTimeKind.Unspecified).AddTicks(8994), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.HardwareManufacturer", b =>
                {
                    b.Property<int>("HardwareManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardwareManufacturerId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("HardwareManufacturerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("hardware_manufacturer_name")
                        .HasComment("Name of the hardware manufacturer or vendor");

                    b.Property<string>("IconFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("hwmanu_icon_file")
                        .HasComment("Filename of manufacturer icon/logo in wwwroot/images/hw_manufacturers/");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("ProductionFocus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hwmanu_production_focus")
                        .HasComment("Primary production focus or specialization");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("HardwareManufacturerId")
                        .HasName("PK_hardware_manufacturer");

                    b.HasIndex("HardwareManufacturerName")
                        .HasDatabaseName("IX_hardware_manufacturer_name");

                    b.HasIndex("ProductionFocus")
                        .HasDatabaseName("IX_hardware_manufacturer_focus");

                    b.HasIndex("HardwareManufacturerName", "ProductionFocus")
                        .HasDatabaseName("IX_hardware_manufacturer_name_focus");

                    b.ToTable("hardware_manufacturer", null, t =>
                        {
                            t.HasComment("Hardware manufacturers and vendors with production focus for asset management");
                        });

                    b.HasData(
                        new
                        {
                            HardwareManufacturerId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Dell Technologies (Dell, EMC)",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Hewlett Packard Enterprise (HPE)",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HP Inc.",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Lenovo (ThinkPad, ThinkStation)",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "IBM",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Supermicro",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Fujitsu",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NEC",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Acer",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ASUS",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "MSI",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Gigabyte",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Origin PC",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "System76",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Puget Systems",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Cisco Systems",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Juniper Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Aruba Networks (HPE)",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Fortinet",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Palo Alto Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Check Point",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Extreme Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Ruckus Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Ubiquiti",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Netgear",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "D-Link",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "TP-Link",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Linksys",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Mikrotik",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Cambium Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Huawei",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ZTE",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Nokia",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Ericsson",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "F5 Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NetApp",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Pure Storage",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Dell EMC",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HPE (Nimble, 3PAR)",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "IBM (FlashSystem)",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Hitachi Vantara",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Western Digital",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Seagate Technology",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "QNAP",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Synology",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Drobo",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Promise Technology",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Quantum Corporation",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Spectra Logic",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Intel",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "AMD",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NVIDIA",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Qualcomm",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Broadcom",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Marvell",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "MediaTek",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ARM Holdings",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Texas Instruments",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Analog Devices",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Microchip Technology",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NXP Semiconductors",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Infineon Technologies",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Samsung",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SK Hynix",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Micron Technology",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Kingston Technology",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Corsair",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "G.Skill",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Crucial (Micron)",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ADATA",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SanDisk (Western Digital)",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Toshiba Memory (Kioxia)",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Apple",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Samsung",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Google (Pixel)",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "OnePlus",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Xiaomi",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Huawei",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Oppo",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Vivo",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Motorola",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "LG (discontinued)",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sony",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HTC",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Siemens",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Schneider Electric",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Rockwell Automation",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Honeywell",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "General Electric (GE)",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ABB",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Emerson",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Yokogawa",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Omron",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Mitsubishi Electric",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Fanuc",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Phoenix Contact",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Wago",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Beckhoff",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "B&R Automation",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Advantech",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 101,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Moxa",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 102,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Digi International",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 103,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sierra Wireless",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 104,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Telit",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 105,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "RSA Security",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 106,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Thales Group",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 107,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Gemalto (Thales)",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 108,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SafeNet (Thales)",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 109,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Yubico",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 110,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SonicWall",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 111,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "WatchGuard",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 112,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Barracuda Networks",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 113,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Imperva",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 114,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "A10 Networks",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 115,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Samsung Display",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 116,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "LG Display",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 117,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sony",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 118,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sharp",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 119,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Panasonic",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 120,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ViewSonic",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 121,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "BenQ",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 122,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "AOC",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 123,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Acer",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 124,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ASUS",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 125,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Dell",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 126,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HP",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 127,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Eizo",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 128,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NEC Display",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 129,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "APC (Schneider Electric)",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 130,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Eaton",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 131,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Vertiv (Liebert)",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 132,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Tripp Lite",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 133,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "CyberPower",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 134,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Rittal",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 135,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Panduit",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 136,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Legrand",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 137,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Raritan",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 138,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Server Technology",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 139,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Chatsworth Products",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 140,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Logitech",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 141,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Microsoft",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 142,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Razer",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 143,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Corsair",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 144,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SteelSeries",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 145,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HyperX",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 146,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Audio-Technica",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 147,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sennheiser",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 148,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Plantronics (Poly)",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 149,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Jabra",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 150,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Wacom",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 151,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Epson",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 152,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Canon",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 153,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Brother",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 154,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Xerox",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 155,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Tesla (automotive tech)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 156,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SpaceX (aerospace)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 157,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Boston Dynamics (robotics)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 158,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Magic Leap (AR/VR)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 159,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Oculus (Meta)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 160,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HTC Vive",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 161,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Varjo",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 162,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "3D Systems",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 163,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Stratasys",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 164,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Formlabs",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 165,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "MakerBot",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 166,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Matrox",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 167,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Oracle",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 168,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Amazon (AWS)",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 169,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Loongson",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 170,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Zhaoxin",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 171,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "VIA Technologies",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 172,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Phytium",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.HwEnclosure", b =>
                {
                    b.Property<int>("HwEnclosureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hw_enclosure_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HwEnclosureId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("EnclosureDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("enclosure_description")
                        .HasComment("Detailed description of the enclosure type and use case");

                    b.Property<string>("EnclosureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("enclosure_name")
                        .HasComment("Name or type of the hardware enclosure");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("HwEnclosureId")
                        .HasName("PK_hw_enclosure");

                    b.HasIndex("EnclosureName")
                        .IsUnique()
                        .HasDatabaseName("IX_hw_enclosure_name");

                    b.ToTable("hw_enclosure", null, t =>
                        {
                            t.HasComment("Hardware enclosure types defining form factors and mounting styles");
                        });

                    b.HasData(
                        new
                        {
                            HwEnclosureId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Standard 19-inch server rack mountable enclosure",
                            EnclosureName = "Server Rackmount Enclosure",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Vertical tower case design for standalone server or workstation",
                            EnclosureName = "Tower",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Modular blade server enclosure housing multiple blade servers",
                            EnclosureName = "Blade",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Standard desktop computer case",
                            EnclosureName = "Desktop",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Compact desktop enclosure with reduced footprint",
                            EnclosureName = "Small Form Factor",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Integrated enclosure with display and computer components",
                            EnclosureName = "All-in-One",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Laptop or notebook form factor enclosure",
                            EnclosureName = "Portable",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Slate-style touchscreen mobile device enclosure",
                            EnclosureName = "Tablet",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Multi-node chassis for rack-mounted server systems",
                            EnclosureName = "Rackmount Chassis",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Purpose-built enclosure for network devices",
                            EnclosureName = "Network Appliance",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Ruggedized enclosure for harsh industrial environments",
                            EnclosureName = "Industrial PC",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Enclosure designed for DIN rail mounting in control panels",
                            EnclosureName = "DIN Rail Mount",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Enclosure designed for wall-mounted installation",
                            EnclosureName = "Wall Mount",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Weather-resistant enclosure for outdoor deployment",
                            EnclosureName = "Outdoor Rated",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Enclosure meeting NEMA environmental protection standards",
                            EnclosureName = "NEMA Rated",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Compact embedded system enclosure",
                            EnclosureName = "Embedded",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(3872), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Installation", b =>
                {
                    b.Property<int>("InstallationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("installation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstallationId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("InstallationAreaOfExcellence")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("installation_area_of_excellence")
                        .HasComment("Primary area of excellence or specialization for this installation");

                    b.Property<string>("InstallationCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("installation_city")
                        .HasComment("City where installation is located");

                    b.Property<string>("InstallationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("installation_name")
                        .HasComment("Name of the military installation");

                    b.Property<string>("InstallationState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("installation_state")
                        .HasComment("State where installation is located");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("InstallationId")
                        .HasName("PK_installation");

                    b.HasIndex("InstallationAreaOfExcellence")
                        .HasDatabaseName("IX_installation_area_excellence");

                    b.HasIndex("InstallationName")
                        .HasDatabaseName("IX_installation_name");

                    b.HasIndex("InstallationState")
                        .HasDatabaseName("IX_installation_state");

                    b.HasIndex("InstallationState", "InstallationCity")
                        .HasDatabaseName("IX_installation_state_city");

                    b.ToTable("installation", null, t =>
                        {
                            t.HasComment("Military installations/bases with area of excellence for asset management");
                        });

                    b.HasData(
                        new
                        {
                            InstallationId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Ground Combat Vehicles",
                            InstallationCity = "Anniston",
                            InstallationName = "Anniston Army Depot",
                            InstallationState = "Alabama",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air Assault",
                            InstallationCity = "Fort Campbell",
                            InstallationName = "Fort Campbell",
                            InstallationState = "Kentucky",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Armored Warfare",
                            InstallationCity = "Killeen",
                            InstallationName = "Fort Cavazos",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Cyber Warfare",
                            InstallationCity = "Augusta",
                            InstallationName = "Fort Eisenhower",
                            InstallationState = "Georgia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Special Operations",
                            InstallationCity = "Fayetteville",
                            InstallationName = "Fort Liberty",
                            InstallationState = "North Carolina",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Maneuver Center of Excellence",
                            InstallationCity = "Columbus",
                            InstallationName = "Fort Moore",
                            InstallationState = "Georgia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Power Projection Platform",
                            InstallationCity = "Tacoma",
                            InstallationName = "Joint Base Lewis-McChord",
                            InstallationState = "Washington",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Missile and Ammunition",
                            InstallationCity = "Chambersburg",
                            InstallationName = "Letterkenny Army Depot",
                            InstallationState = "Pennsylvania",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Combat Vehicle Repair",
                            InstallationCity = "Texarkana",
                            InstallationName = "Red River Army Depot",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Manufacturing and Logistics",
                            InstallationCity = "Rock Island",
                            InstallationName = "Rock Island Arsenal",
                            InstallationState = "Illinois",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Ammunition Storage",
                            InstallationCity = "Herlong",
                            InstallationName = "Sierra Army Depot",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Communications Electronics",
                            InstallationCity = "Tobyhanna",
                            InstallationName = "Tobyhanna Army Depot",
                            InstallationState = "Pennsylvania",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Cannon Manufacturing",
                            InstallationCity = "Watervliet",
                            InstallationName = "Watervliet Arsenal",
                            InstallationState = "New York",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air Defense Artillery",
                            InstallationCity = "El Paso",
                            InstallationName = "Fort Bliss",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Mountain Warfare",
                            InstallationCity = "Colorado Springs",
                            InstallationName = "Fort Carson",
                            InstallationState = "Colorado",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Cold Weather Training",
                            InstallationCity = "Watertown",
                            InstallationName = "Fort Drum",
                            InstallationState = "New York",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Intelligence Training",
                            InstallationCity = "Sierra Vista",
                            InstallationName = "Fort Huachuca",
                            InstallationState = "Arizona",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "National Training Center",
                            InstallationCity = "Barstow",
                            InstallationName = "Fort Irwin",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Joint Readiness Training Center",
                            InstallationCity = "Leesville",
                            InstallationName = "Fort Johnson",
                            InstallationState = "Louisiana",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Human Resources",
                            InstallationCity = "Fort Knox",
                            InstallationName = "Fort Knox",
                            InstallationState = "Kentucky",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Combined Arms Center",
                            InstallationCity = "Leavenworth",
                            InstallationName = "Fort Leavenworth",
                            InstallationState = "Kansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Sustainment",
                            InstallationCity = "Petersburg",
                            InstallationName = "Fort Lee",
                            InstallationState = "Virginia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Engineer Training",
                            InstallationCity = "St. Robert",
                            InstallationName = "Fort Leonard Wood",
                            InstallationState = "Missouri",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Aviation Training",
                            InstallationCity = "Daleville",
                            InstallationName = "Fort Novosel",
                            InstallationState = "Alabama",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Division Headquarters",
                            InstallationCity = "Junction City",
                            InstallationName = "Fort Riley",
                            InstallationState = "Kansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Field Artillery",
                            InstallationCity = "Lawton",
                            InstallationName = "Fort Sill",
                            InstallationState = "Oklahoma",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Heavy Mechanized Infantry",
                            InstallationCity = "Hinesville",
                            InstallationName = "Fort Stewart",
                            InstallationState = "Georgia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Arctic Warfare",
                            InstallationCity = "Fairbanks",
                            InstallationName = "Fort Wainwright",
                            InstallationState = "Alaska",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Pacific Air Power",
                            InstallationCity = "Anchorage",
                            InstallationName = "Joint Base Elmendorf-Richardson",
                            InstallationState = "Alaska",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air Combat Command",
                            InstallationCity = "Hampton",
                            InstallationName = "Joint Base Langley-Eustis",
                            InstallationState = "Virginia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Military Medical Training",
                            InstallationCity = "San Antonio",
                            InstallationName = "Joint Base San Antonio",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Armaments Research",
                            InstallationCity = "Dover",
                            InstallationName = "Picatinny Arsenal",
                            InstallationState = "New Jersey",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Chemical/Biological Defense",
                            InstallationCity = "Pine Bluff",
                            InstallationName = "Pine Bluff Arsenal",
                            InstallationState = "Arkansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Missile and Space",
                            InstallationCity = "Huntsville",
                            InstallationName = "Redstone Arsenal",
                            InstallationState = "Alabama",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Test and Evaluation",
                            InstallationCity = "Aberdeen",
                            InstallationName = "Aberdeen Proving Ground",
                            InstallationState = "Maryland",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Chemical/Biological Testing",
                            InstallationCity = "Dugway",
                            InstallationName = "Dugway Proving Ground",
                            InstallationState = "Utah",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Missile Testing",
                            InstallationCity = "Las Cruces",
                            InstallationName = "White Sands Missile Range",
                            InstallationState = "New Mexico",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Desert Testing",
                            InstallationCity = "Yuma",
                            InstallationName = "Yuma Proving Ground",
                            InstallationState = "Arizona",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Mobilization Training",
                            InstallationCity = "Edinburgh",
                            InstallationName = "Camp Atterbury",
                            InstallationState = "Indiana",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "National Guard Training",
                            InstallationCity = "Johnston",
                            InstallationName = "Camp Dodge",
                            InstallationState = "Iowa",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Joint Maneuver Training",
                            InstallationCity = "Grayling",
                            InstallationName = "Camp Grayling",
                            InstallationState = "Michigan",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Winter Operations",
                            InstallationCity = "Little Falls",
                            InstallationName = "Camp Ripley",
                            InstallationState = "Minnesota",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Mobilization Site",
                            InstallationCity = "Hattiesburg",
                            InstallationName = "Camp Shelby",
                            InstallationState = "Mississippi",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Joint Training",
                            InstallationCity = "Fort Smith",
                            InstallationName = "Fort Chaffee",
                            InstallationState = "Arkansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Combat Support Training",
                            InstallationCity = "Jolon",
                            InstallationName = "Fort Hunter Liggett",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Reserve Training",
                            InstallationCity = "Sparta",
                            InstallationName = "Fort McCoy",
                            InstallationState = "Wisconsin",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Foreign Military Training",
                            InstallationCity = "Blackstone",
                            InstallationName = "Fort Pickett",
                            InstallationState = "Virginia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Regional Training",
                            InstallationCity = "Helena",
                            InstallationName = "Fort William Henry Harrison",
                            InstallationState = "Montana",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air National Guard",
                            InstallationCity = "Boise",
                            InstallationName = "Gowen Field",
                            InstallationState = "Idaho",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Munitions Storage",
                            InstallationCity = "Bellemont",
                            InstallationName = "Camp Navajo",
                            InstallationState = "Arizona",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Reserve Operations",
                            InstallationCity = "Dublin",
                            InstallationName = "Camp Parks",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Maneuver Training",
                            InstallationCity = "Bastrop",
                            InstallationName = "Camp Swift",
                            InstallationState = "Texas",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.PhysicalMemoryType", b =>
                {
                    b.Property<int>("PhysicalMemtypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("physical_memtype_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhysicalMemtypeId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("PhysicalMemtypeDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("physical_memtype_description")
                        .HasComment("Technical description and specifications of the memory type");

                    b.Property<string>("PhysicalMemtypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("physical_memtype_name")
                        .HasComment("Name or designation of the memory type");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("PhysicalMemtypeId")
                        .HasName("PK_physical_memory_type");

                    b.HasIndex("PhysicalMemtypeName")
                        .IsUnique()
                        .HasDatabaseName("IX_physical_memory_type_name");

                    b.ToTable("physical_memory_type", null, t =>
                        {
                            t.HasComment("Physical memory types and technologies for hardware specifications");
                        });

                    b.HasData(
                        new
                        {
                            PhysicalMemtypeId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate SDRAM - First generation DDR memory",
                            PhysicalMemtypeName = "DDR",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 2 SDRAM - Improved speed and efficiency over DDR",
                            PhysicalMemtypeName = "DDR2",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 3 SDRAM - Standard desktop/server RAM 2007-2015",
                            PhysicalMemtypeName = "DDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 4 SDRAM - Current standard desktop/server RAM",
                            PhysicalMemtypeName = "DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 5 SDRAM - Latest generation high-speed RAM",
                            PhysicalMemtypeName = "DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Small Outline DDR3 module for laptops and compact systems",
                            PhysicalMemtypeName = "DDR3 SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Small Outline DDR4 module for laptops and compact systems",
                            PhysicalMemtypeName = "DDR4 SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Small Outline DDR5 module for laptops and compact systems",
                            PhysicalMemtypeName = "DDR5 SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low voltage DDR3 SDRAM (1.35V) for energy efficiency",
                            PhysicalMemtypeName = "DDR3L",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low voltage DDR3 SODIMM for mobile devices",
                            PhysicalMemtypeName = "DDR3L SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low voltage DDR4 SDRAM (1.2V) for energy efficiency",
                            PhysicalMemtypeName = "DDR4L",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Error-Correcting Code DDR3 for servers and workstations",
                            PhysicalMemtypeName = "ECC DDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Error-Correcting Code DDR4 for servers and workstations",
                            PhysicalMemtypeName = "ECC DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Error-Correcting Code DDR5 for servers and workstations",
                            PhysicalMemtypeName = "ECC DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Buffered DDR3 for high-capacity server configurations",
                            PhysicalMemtypeName = "Registered DDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Buffered DDR4 for high-capacity server configurations",
                            PhysicalMemtypeName = "Registered DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Buffered DDR5 for high-capacity server configurations",
                            PhysicalMemtypeName = "Registered DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "LR-DIMM DDR4 for maximum density server memory",
                            PhysicalMemtypeName = "Load-Reduced DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "LR-DIMM DDR5 for maximum density server memory",
                            PhysicalMemtypeName = "Load-Reduced DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Synchronous Dynamic RAM - Legacy memory type",
                            PhysicalMemtypeName = "SDRAM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Extended Data Out RAM - Obsolete legacy memory",
                            PhysicalMemtypeName = "EDO RAM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Fast Page Mode RAM - Obsolete legacy memory",
                            PhysicalMemtypeName = "FPM RAM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Graphics DDR5 - Specialized memory for graphics cards",
                            PhysicalMemtypeName = "GDDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Graphics DDR6 - High-speed graphics card memory",
                            PhysicalMemtypeName = "GDDR6",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Graphics DDR6X - Enhanced graphics memory",
                            PhysicalMemtypeName = "GDDR6X",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "High Bandwidth Memory 2 - Stacked memory for GPUs",
                            PhysicalMemtypeName = "HBM2",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "High Bandwidth Memory 2e - Enhanced HBM2",
                            PhysicalMemtypeName = "HBM2e",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "High Bandwidth Memory 3 - Latest high-performance stacked memory",
                            PhysicalMemtypeName = "HBM3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR3 - Mobile device optimized memory",
                            PhysicalMemtypeName = "LPDDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR4 - Smartphone and tablet memory",
                            PhysicalMemtypeName = "LPDDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR4X - Enhanced efficiency mobile memory",
                            PhysicalMemtypeName = "LPDDR4X",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR5 - Latest generation mobile memory",
                            PhysicalMemtypeName = "LPDDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 372, DateTimeKind.Unspecified).AddTicks(8053), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR5X - Enhanced LPDDR5 for flagship devices",
                            PhysicalMemtypeName = "LPDDR5X",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("program_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("LegacyProgramName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("legacy_program_name")
                        .HasComment("Historical/legacy program name");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int?>("ProgramManagerId")
                        .HasColumnType("int")
                        .HasColumnName("program_manager")
                        .HasComment("User ID of program manager (nullable until data available)");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("program_name")
                        .HasComment("Current program name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("ProgramId")
                        .HasName("PK_program");

                    b.HasIndex("LegacyProgramName")
                        .HasDatabaseName("IX_program_legacy_name");

                    b.HasIndex("ProgramId")
                        .HasDatabaseName("IX_program_asset_lookup");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("ProgramId"), new[] { "ProgramName", "LegacyProgramName" });

                    b.HasIndex("ProgramManagerId");

                    b.HasIndex("ProgramName")
                        .IsUnique()
                        .HasDatabaseName("UX_program_name");

                    b.ToTable("program", null, t =>
                        {
                            t.HasComment("DoD programs that own/manage industrial assets");
                        });

                    b.HasData(
                        new
                        {
                            ProgramId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Patriot",
                            ProgramName = "IFMC",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Himars",
                            ProgramName = "STORM",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "TOW",
                            ProgramName = "TAGM",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Avenger",
                            ProgramName = "SHIELD",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "MULTI",
                            ProgramName = "MULTI",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Sentinel",
                            ProgramName = "STARE",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name")
                        .HasComment("Unique role name for the system");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("RoleId")
                        .HasName("PK_role");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasDatabaseName("UX_role_name");

                    b.ToTable("role", null, t =>
                        {
                            t.HasComment("User roles for RBAC implementation - DoD compliant");
                        });

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3651), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "system",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3653), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "cyber_user",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3654), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "tem_user",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3655), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "dev_user",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3656), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "cyber_mgr",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3657), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "tem_mgr",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3658), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "org_mgr",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 373, DateTimeKind.Unspecified).AddTicks(3659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "sys_admin",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("building_id")
                        .HasComment("Building where room is located");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("FloorId")
                        .HasColumnType("int")
                        .HasColumnName("floor_id")
                        .HasComment("Floor where room is located");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_name")
                        .HasComment("Room name or identifier");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("RoomId")
                        .HasName("PK_room");

                    b.HasIndex("BuildingId")
                        .HasDatabaseName("IX_room_building");

                    b.HasIndex("FloorId")
                        .HasDatabaseName("IX_room_floor");

                    b.HasIndex("RoomName")
                        .HasDatabaseName("IX_room_name");

                    b.HasIndex("BuildingId", "FloorId")
                        .HasDatabaseName("IX_room_building_floor");

                    b.ToTable("room", null, t =>
                        {
                            t.HasComment("Specific rooms within buildings, identified by building and floor");
                        });

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            BuildingId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorId = 3,
                            RoomName = "High Power Room",
                            Version = 1
                        },
                        new
                        {
                            RoomId = 2,
                            BuildingId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorId = 3,
                            RoomName = "DLU Garage Oversight Bay",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.SmeRole", b =>
                {
                    b.Property<int>("SmeRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("smerole_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SmeRoleId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("SmeRoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("smerole_name")
                        .HasComment("Unique SME role/specialization name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("SmeRoleId")
                        .HasName("PK_sme_role");

                    b.HasIndex("SmeRoleName")
                        .IsUnique()
                        .HasDatabaseName("UX_sme_role_name");

                    b.ToTable("sme_role", null, t =>
                        {
                            t.HasComment("Subject Matter Expert roles for specialized expertise designation");
                        });

                    b.HasData(
                        new
                        {
                            SmeRoleId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Change Management Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Vulnerability Management Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Access Control Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Risk Management Framework Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Database Management Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "SAN Environment & Virtualization Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Linux Environment Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Windows Environment Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Legacy Environment Specialist",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.SoftwareManufacturer", b =>
                {
                    b.Property<int>("SoftwareManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("software_manufacturer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareManufacturerId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("IconFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("swmanu_icon_file")
                        .HasComment("Filename of manufacturer icon/logo in wwwroot/images/sw_manufacturers/");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("ProductionFocus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("swmanu_production_focus")
                        .HasComment("Primary production focus or specialization");

                    b.Property<string>("SoftwareManufacturerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("software_manufacturer_name")
                        .HasComment("Name of the software manufacturer or vendor");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("SoftwareManufacturerId")
                        .HasName("PK_software_manufacturer");

                    b.HasIndex("ProductionFocus")
                        .HasDatabaseName("IX_software_manufacturer_focus");

                    b.HasIndex("SoftwareManufacturerName")
                        .HasDatabaseName("IX_software_manufacturer_name");

                    b.HasIndex("SoftwareManufacturerName", "ProductionFocus")
                        .HasDatabaseName("IX_software_manufacturer_name_focus");

                    b.ToTable("software_manufacturer", null, t =>
                        {
                            t.HasComment("Software manufacturers and vendors with production focus for software asset management");
                        });

                    b.HasData(
                        new
                        {
                            SoftwareManufacturerId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "OS Software & Productivity",
                            SoftwareManufacturerName = "Microsoft",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "OS Software & Hardware",
                            SoftwareManufacturerName = "Apple",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud & Software Services",
                            SoftwareManufacturerName = "Google",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Linux & Open Source",
                            SoftwareManufacturerName = "Red Hat",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Linux",
                            SoftwareManufacturerName = "SUSE",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Ubuntu Linux",
                            SoftwareManufacturerName = "Canonical",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Virtualization & Cloud",
                            SoftwareManufacturerName = "VMware",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Virtualization & Networking",
                            SoftwareManufacturerName = "Citrix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Database & Enterprise Software",
                            SoftwareManufacturerName = "Oracle",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise & Cloud Solutions",
                            SoftwareManufacturerName = "IBM",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Embedded OS",
                            SoftwareManufacturerName = "Wind River Systems",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Resource Planning",
                            SoftwareManufacturerName = "SAP",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "CRM & Cloud Services",
                            SoftwareManufacturerName = "Salesforce",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Service Management",
                            SoftwareManufacturerName = "ServiceNow",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "HR & Finance Software",
                            SoftwareManufacturerName = "Workday",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "Infor",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "Epicor",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "IFS",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "QAD",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Business Management Software",
                            SoftwareManufacturerName = "Sage",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Financial Software",
                            SoftwareManufacturerName = "Intuit",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Accounting Software",
                            SoftwareManufacturerName = "Xero",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Accounting Software",
                            SoftwareManufacturerName = "FreshBooks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Financial Software",
                            SoftwareManufacturerName = "Wave Accounting",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Expense Management",
                            SoftwareManufacturerName = "Expensify",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Financial Automation",
                            SoftwareManufacturerName = "Bill.com",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Payroll & HR Services",
                            SoftwareManufacturerName = "ADP",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Payroll Services",
                            SoftwareManufacturerName = "Paychex",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Conferencing",
                            SoftwareManufacturerName = "Zoom",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Networking & Communications",
                            SoftwareManufacturerName = "Cisco",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Communications",
                            SoftwareManufacturerName = "RingCentral",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Communications",
                            SoftwareManufacturerName = "8x8",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Communications Platform",
                            SoftwareManufacturerName = "Vonage",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Communications APIs",
                            SoftwareManufacturerName = "Twilio",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Marketing",
                            SoftwareManufacturerName = "Constant Contact",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Marketing",
                            SoftwareManufacturerName = "Campaign Monitor",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Marketing",
                            SoftwareManufacturerName = "AWeber",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Team Collaboration",
                            SoftwareManufacturerName = "Slack Technologies",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Communications Platform",
                            SoftwareManufacturerName = "Discord",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Platform",
                            SoftwareManufacturerName = "Shopify",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Web Publishing",
                            SoftwareManufacturerName = "Automattic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Platform",
                            SoftwareManufacturerName = "BigCommerce",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Website Builder",
                            SoftwareManufacturerName = "Squarespace",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Website Builder",
                            SoftwareManufacturerName = "Wix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Marketplace",
                            SoftwareManufacturerName = "Etsy",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud & E-commerce",
                            SoftwareManufacturerName = "Amazon",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Marketplace",
                            SoftwareManufacturerName = "eBay",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Platform",
                            SoftwareManufacturerName = "PrestaShop",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare IT",
                            SoftwareManufacturerName = "MEDITECH",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare Software",
                            SoftwareManufacturerName = "Epic Systems",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare IT",
                            SoftwareManufacturerName = "Cerner",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare Software",
                            SoftwareManufacturerName = "Allscripts",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare Services",
                            SoftwareManufacturerName = "athenahealth",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Design & Engineering Software",
                            SoftwareManufacturerName = "Autodesk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Software",
                            SoftwareManufacturerName = "Bentley Systems",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Industrial Software",
                            SoftwareManufacturerName = "AVEVA",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Industrial Automation",
                            SoftwareManufacturerName = "Rockwell Automation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Energy Management",
                            SoftwareManufacturerName = "Schneider Electric",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Industrial Solutions",
                            SoftwareManufacturerName = "Honeywell",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Automation Solutions",
                            SoftwareManufacturerName = "Emerson",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "3D Design Software",
                            SoftwareManufacturerName = "Dassault Systèmes",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Product Lifecycle Management",
                            SoftwareManufacturerName = "PTC",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Digital Industries Software",
                            SoftwareManufacturerName = "Siemens",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Simulation Software",
                            SoftwareManufacturerName = "Ansys",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Positioning Technology",
                            SoftwareManufacturerName = "Trimble",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "GIS Software",
                            SoftwareManufacturerName = "Esri",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Open Source Software",
                            SoftwareManufacturerName = "Mozilla Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Open Source Collaboration",
                            SoftwareManufacturerName = "Linux Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Open Source Software",
                            SoftwareManufacturerName = "Apache Software Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Database Software",
                            SoftwareManufacturerName = "PostgreSQL Global Development",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Database Software",
                            SoftwareManufacturerName = "MariaDB Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Content Management",
                            SoftwareManufacturerName = "Drupal Association",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Content Management",
                            SoftwareManufacturerName = "WordPress Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Infrastructure",
                            SoftwareManufacturerName = "OpenStack Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Office Software",
                            SoftwareManufacturerName = "LibreOffice Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Artificial Intelligence",
                            SoftwareManufacturerName = "OpenAI",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AI Safety",
                            SoftwareManufacturerName = "Anthropic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AI Research",
                            SoftwareManufacturerName = "DeepMind",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AI Computing Platform",
                            SoftwareManufacturerName = "NVIDIA",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AutoML Platform",
                            SoftwareManufacturerName = "DataRobot",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Machine Learning Platform",
                            SoftwareManufacturerName = "H2O.ai",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Analytics",
                            SoftwareManufacturerName = "Alteryx",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Science Platform",
                            SoftwareManufacturerName = "Dataiku",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Analytics Platform",
                            SoftwareManufacturerName = "Palantir",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise AI",
                            SoftwareManufacturerName = "C3.ai",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Robotic Process Automation",
                            SoftwareManufacturerName = "UiPath",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "RPA Platform",
                            SoftwareManufacturerName = "Automation Anywhere",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Intelligent Automation",
                            SoftwareManufacturerName = "Blue Prism",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Desktop Virtualization",
                            SoftwareManufacturerName = "Parallels",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Hybrid Cloud Infrastructure",
                            SoftwareManufacturerName = "Nutanix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Container Platform",
                            SoftwareManufacturerName = "Docker",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Container Orchestration",
                            SoftwareManufacturerName = "Kubernetes",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Protection",
                            SoftwareManufacturerName = "Veeam",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Management",
                            SoftwareManufacturerName = "Commvault",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Protection",
                            SoftwareManufacturerName = "Veritas",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cyber Protection",
                            SoftwareManufacturerName = "Acronis",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Data Protection",
                            SoftwareManufacturerName = "Druva",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Data Management",
                            SoftwareManufacturerName = "Rubrik",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Management Platform",
                            SoftwareManufacturerName = "Cohesity",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Management",
                            SoftwareManufacturerName = "SolarWinds",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 101,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Management",
                            SoftwareManufacturerName = "ManageEngine",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 102,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Network Monitoring",
                            SoftwareManufacturerName = "Paessler",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 103,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Monitoring",
                            SoftwareManufacturerName = "Nagios",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 104,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Monitoring Solution",
                            SoftwareManufacturerName = "Zabbix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 105,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Application Development",
                            SoftwareManufacturerName = "Progress",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 106,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Asset Management",
                            SoftwareManufacturerName = "Lansweeper",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 107,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Mobile App Framework",
                            SoftwareManufacturerName = "Ionic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 108,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Mobile Development",
                            SoftwareManufacturerName = "Appcelerator",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 109,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Content Management",
                            SoftwareManufacturerName = "Joomla",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 110,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Digital Experience Platform",
                            SoftwareManufacturerName = "Sitecore",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 111,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Headless CMS",
                            SoftwareManufacturerName = "Contentful",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 112,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Headless CMS",
                            SoftwareManufacturerName = "Strapi",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 113,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "NoSQL Database",
                            SoftwareManufacturerName = "MongoDB",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 114,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Data Warehouse",
                            SoftwareManufacturerName = "Snowflake",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 115,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Lakehouse Platform",
                            SoftwareManufacturerName = "Databricks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 116,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Visualization",
                            SoftwareManufacturerName = "Tableau",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 117,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Business Intelligence",
                            SoftwareManufacturerName = "Qlik",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 118,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Analytics Software",
                            SoftwareManufacturerName = "SAS Institute",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 119,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Analytics",
                            SoftwareManufacturerName = "Teradata",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 120,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "NoSQL Database",
                            SoftwareManufacturerName = "MarkLogic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 121,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Graph Database",
                            SoftwareManufacturerName = "Neo4j",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 122,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Distributed Database",
                            SoftwareManufacturerName = "DataStax",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 123,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Time Series Database",
                            SoftwareManufacturerName = "InfluxData",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 124,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Search & Analytics",
                            SoftwareManufacturerName = "Elastic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 125,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Endpoint Protection",
                            SoftwareManufacturerName = "CrowdStrike",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 126,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Endpoint Security",
                            SoftwareManufacturerName = "SentinelOne",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 127,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Network Security",
                            SoftwareManufacturerName = "Palo Alto Networks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 128,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Network Security",
                            SoftwareManufacturerName = "Fortinet",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 129,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cyber Security",
                            SoftwareManufacturerName = "Check Point",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 130,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "Broadcom",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 131,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Security Software",
                            SoftwareManufacturerName = "McAfee",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 132,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cybersecurity",
                            SoftwareManufacturerName = "Trend Micro",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 133,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Security Software",
                            SoftwareManufacturerName = "Kaspersky",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 134,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cybersecurity",
                            SoftwareManufacturerName = "Bitdefender",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 135,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Security",
                            SoftwareManufacturerName = "ESET",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 136,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cyber Security",
                            SoftwareManufacturerName = "F-Secure",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 137,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cybersecurity",
                            SoftwareManufacturerName = "Sophos",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 138,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Security Analytics",
                            SoftwareManufacturerName = "Rapid7",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 139,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Security",
                            SoftwareManufacturerName = "Qualys",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 140,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Vulnerability Management",
                            SoftwareManufacturerName = "Tenable",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 141,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Application Security",
                            SoftwareManufacturerName = "Veracode",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 142,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Identity Management",
                            SoftwareManufacturerName = "Okta",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 143,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Identity Security",
                            SoftwareManufacturerName = "Ping Identity",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 144,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Privileged Access Security",
                            SoftwareManufacturerName = "CyberArk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 145,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Privileged Access Management",
                            SoftwareManufacturerName = "BeyondTrust",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 146,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Security",
                            SoftwareManufacturerName = "Varonis",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 147,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Security",
                            SoftwareManufacturerName = "Proofpoint",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 148,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Security",
                            SoftwareManufacturerName = "Mimecast",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 149,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Security",
                            SoftwareManufacturerName = "Zscaler",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 150,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Web Infrastructure & Security",
                            SoftwareManufacturerName = "Cloudflare",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 151,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Development Tools",
                            SoftwareManufacturerName = "JetBrains",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 152,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Collaboration Software",
                            SoftwareManufacturerName = "Atlassian",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 153,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Development Platform",
                            SoftwareManufacturerName = "GitHub",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 154,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "DevOps Platform",
                            SoftwareManufacturerName = "GitLab",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 155,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Automation Server",
                            SoftwareManufacturerName = "Jenkins",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 156,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Automation",
                            SoftwareManufacturerName = "HashiCorp",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 157,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Configuration Management",
                            SoftwareManufacturerName = "Puppet",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 158,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Automation",
                            SoftwareManufacturerName = "Chef Software",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 159,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Platform",
                            SoftwareManufacturerName = "Splunk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 160,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Observability Platform",
                            SoftwareManufacturerName = "New Relic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 161,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Monitoring & Analytics",
                            SoftwareManufacturerName = "Datadog",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 162,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Application Performance",
                            SoftwareManufacturerName = "AppDynamics",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 163,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Software Intelligence",
                            SoftwareManufacturerName = "Dynatrace",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 164,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Incident Management",
                            SoftwareManufacturerName = "PagerDuty",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 165,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Game Development Platform",
                            SoftwareManufacturerName = "Unity Technologies",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 166,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Game Engine & Platform",
                            SoftwareManufacturerName = "Epic Games",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 167,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Computing",
                            SoftwareManufacturerName = "Alibaba Cloud",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 168,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Infrastructure",
                            SoftwareManufacturerName = "DigitalOcean",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 169,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Hosting",
                            SoftwareManufacturerName = "Linode",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 170,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Infrastructure",
                            SoftwareManufacturerName = "Vultr",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 171,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Services",
                            SoftwareManufacturerName = "OVHcloud",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 172,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Managed Cloud",
                            SoftwareManufacturerName = "Rackspace",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 173,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Creative Software",
                            SoftwareManufacturerName = "Adobe",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 174,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Graphics Software",
                            SoftwareManufacturerName = "Corel",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 175,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Productivity Platform",
                            SoftwareManufacturerName = "Notion",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 176,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Remote Access Software",
                            SoftwareManufacturerName = "LogMeIn",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 177,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Storage",
                            SoftwareManufacturerName = "Dropbox",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 178,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Content Management",
                            SoftwareManufacturerName = "Box",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 179,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "3D Software",
                            SoftwareManufacturerName = "Maxon",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 180,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Visual Effects Software",
                            SoftwareManufacturerName = "Foundry",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 181,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Production",
                            SoftwareManufacturerName = "Blackmagic Design",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 182,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Media Production",
                            SoftwareManufacturerName = "Avid Technology",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 183,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Electronic Arts",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 184,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Activision Blizzard",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 185,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Ubisoft",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 186,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Gaming Platform",
                            SoftwareManufacturerName = "Valve Corporation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 187,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Riot Games",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 188,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Take-Two Interactive",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 189,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Bethesda Game Studios",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 190,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "CD Projekt",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 191,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Square Enix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 192,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Capcom",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 193,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Konami",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 194,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Bandai Namco",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 195,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Marketing Platform",
                            SoftwareManufacturerName = "HubSpot",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 196,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Customer Service",
                            SoftwareManufacturerName = "Zendesk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 197,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Customer Engagement",
                            SoftwareManufacturerName = "Freshworks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 198,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Business Software",
                            SoftwareManufacturerName = "Zoho",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 199,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Sales CRM",
                            SoftwareManufacturerName = "Pipedrive",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 200,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Work Management",
                            SoftwareManufacturerName = "Monday.com",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 201,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Project Management",
                            SoftwareManufacturerName = "Asana",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 202,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Work Management",
                            SoftwareManufacturerName = "Smartsheet",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 203,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Low-Code Platform",
                            SoftwareManufacturerName = "Airtable",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 204,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Productivity Platform",
                            SoftwareManufacturerName = "ClickUp",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 205,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Project Management",
                            SoftwareManufacturerName = "Basecamp",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.SysArchitecture", b =>
                {
                    b.Property<int>("SysArchitectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sys_architecture_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SysArchitectureId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("SysArchitectureDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("sys_architecture_description")
                        .HasComment("Detailed description of the architecture and its use cases");

                    b.Property<string>("SystemArchitecture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("system_architecture")
                        .HasComment("Architecture/instruction set name or designation");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("SysArchitectureId")
                        .HasName("PK_sys_architecture");

                    b.HasIndex("SystemArchitecture")
                        .IsUnique()
                        .HasDatabaseName("IX_sys_architecture_name");

                    b.ToTable("sys_architecture", null, t =>
                        {
                            t.HasComment("System architectures and instruction sets for hardware platform categorization");
                        });

                    b.HasData(
                        new
                        {
                            SysArchitectureId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit Intel architecture based on 8086 processor family; also known as i386 or IA-32",
                            SystemArchitecture = "x86",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit extension of x86 architecture; also known as x64 AMD64 or Intel 64",
                            SystemArchitecture = "x86_64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit RISC architecture widely used in mobile devices and embedded systems",
                            SystemArchitecture = "ARM",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit ARM architecture; also known as AArch64 or ARMv8",
                            SystemArchitecture = "ARM64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Intel Itanium 64-bit architecture designed for enterprise servers; now largely discontinued",
                            SystemArchitecture = "IA-64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "RISC architecture developed by Apple IBM and Motorola; used in older Macs and gaming consoles",
                            SystemArchitecture = "PowerPC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Scalable Processor Architecture; RISC architecture used primarily in Oracle/Sun enterprise systems",
                            SystemArchitecture = "SPARC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Microprocessor without Interlocked Pipeline Stages; RISC architecture used in embedded systems and routers",
                            SystemArchitecture = "MIPS",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Open-source RISC instruction set architecture gaining adoption in various applications",
                            SystemArchitecture = "RISC-V",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit RISC architecture developed by DEC; discontinued but historically significant",
                            SystemArchitecture = "Alpha",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Precision Architecture RISC developed by HP for Unix workstations and servers",
                            SystemArchitecture = "PA-RISC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit IBM System/390 mainframe architecture; also known as z/Architecture",
                            SystemArchitecture = "s390x",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Motorola 68000 series architecture; used in early Apple Macintosh and Amiga computers",
                            SystemArchitecture = "m68k",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit version of MIPS architecture used in high-performance embedded systems",
                            SystemArchitecture = "MIPS64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit version of PowerPC architecture; used in IBM Power Systems",
                            SystemArchitecture = "PowerPC64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit ARM architecture version 7; common in smartphones and tablets from 2010s",
                            SystemArchitecture = "ARMv7",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "ARM architecture version 8; introduced 64-bit support and used in modern mobile devices",
                            SystemArchitecture = "ARMv8",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Intel 80386 32-bit architecture; synonym for x86",
                            SystemArchitecture = "i386",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Intel Pentium Pro and later 32-bit x86 processors with enhanced instruction sets",
                            SystemArchitecture = "i686",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "AMD's implementation of 64-bit x86 architecture; synonym for x86_64",
                            SystemArchitecture = "amd64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit version of open-source RISC-V architecture",
                            SystemArchitecture = "RISC-V 32",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit version of open-source RISC-V architecture",
                            SystemArchitecture = "RISC-V 64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "ARM architecture version 6; used in devices like Raspberry Pi 1 and earlier smartphones",
                            SystemArchitecture = "ARMv6",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "ARM architecture version 5; used in older embedded systems and early smartphones",
                            SystemArchitecture = "ARMv5",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "RISC architecture developed by Hitachi; used in embedded systems and Sega gaming consoles",
                            SystemArchitecture = "SuperH",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Configurable processor architecture by Tensilica; used in IoT and embedded devices",
                            SystemArchitecture = "Xtensa",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Open-source RISC architecture for embedded systems",
                            SystemArchitecture = "OpenRISC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 19, 44, 26, 374, DateTimeKind.Unspecified).AddTicks(3295), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Argonaut RISC Core; synthesizable processor architecture for embedded applications",
                            SystemArchitecture = "ARC",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<byte>("AccountStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("user_account_status")
                        .HasComment("Account status: 0=Inactive, 1=Active, 2=Suspended, 3=Locked");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_affiliation")
                        .HasComment("Military branch or civilian agency");

                    b.Property<DateTimeOffset?>("CacExpiry")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("user_cac_expiry")
                        .HasComment("CAC certificate expiration date");

                    b.Property<string>("CertificateDn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_certificate_dn")
                        .HasComment("Distinguished Name from CAC certificate");

                    b.Property<string>("CertificateSerial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_certificate_serial")
                        .HasComment("Certificate serial number for tracking");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<long>("DodId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_dodid")
                        .HasComment("10-digit DoD ID number (EDIPI) for CAC authentication");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_email")
                        .HasComment("User's email address - must be unique");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_first")
                        .HasComment("User's first name");

                    b.Property<DateTimeOffset?>("LastCacAuth")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("user_last_cac_auth")
                        .HasComment("Timestamp of last successful CAC authentication");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_last")
                        .HasComment("User's last name");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("PersonDesignator")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_person_designator")
                        .HasComment("Personnel type: MILITARY, CIVILIAN, CONTRACTOR");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_phone")
                        .HasComment("User's phone number - optional");

                    b.Property<string>("PivAuthCertHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("user_piv_auth_cert_hash")
                        .HasComment("SHA-256 hash of PIV certificate for pinning (MITM protection)");

                    b.Property<bool>("RequiresCac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("user_requires_cac")
                        .HasComment("Whether CAC authentication is mandatory for this user");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("user_role")
                        .HasComment("Primary role assignment (required)");

                    b.Property<int?>("SmeRoleId")
                        .HasColumnType("int")
                        .HasColumnName("sme_role")
                        .HasComment("Subject Matter Expert role (optional)");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("UserId")
                        .HasName("PK_user");

                    b.HasIndex("AccountStatus")
                        .HasDatabaseName("IX_user_account_status")
                        .HasFilter("[user_account_status] = 1");

                    b.HasIndex("CertificateDn")
                        .HasDatabaseName("IX_user_certificate_dn");

                    b.HasIndex("DodId")
                        .IsUnique()
                        .HasDatabaseName("UX_user_dodid");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UX_user_email");

                    b.HasIndex("SmeRoleId")
                        .HasDatabaseName("IX_user_smerole")
                        .HasFilter("[sme_role] IS NOT NULL");

                    b.HasIndex("RoleId", "AccountStatus")
                        .HasDatabaseName("IX_user_role_status");

                    b.ToTable("user", null, t =>
                        {
                            t.HasComment("System users with CAC authentication support for DoD compliance");
                        });

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AccountStatus = (byte)1,
                            Affiliation = "SYSTEM",
                            CertificateDn = "CN=SYSTEM,OU=IAMSNG,O=DoD,C=US",
                            CertificateSerial = "SYSTEM-ACCOUNT-NO-LOGIN",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            DodId = 0L,
                            Email = "system@iamsng.local",
                            FirstName = "SYSTEM",
                            LastName = "ACCOUNT",
                            PersonDesignator = "SYSTEM",
                            RequiresCac = false,
                            RoleId = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.CpuType", b =>
                {
                    b.HasOne("iamsng.Core.Entities.HardwareManufacturer", "HardwareManufacturer")
                        .WithMany()
                        .HasForeignKey("HardwareManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_cpu_type_hardware_manufacturer");

                    b.Navigation("HardwareManufacturer");
                });

            modelBuilder.Entity("iamsng.Core.Entities.GpuType", b =>
                {
                    b.HasOne("iamsng.Core.Entities.HardwareManufacturer", "HardwareManufacturer")
                        .WithMany()
                        .HasForeignKey("HardwareManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_gpu_types_hardware_manufacturer");

                    b.Navigation("HardwareManufacturer");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Program", b =>
                {
                    b.HasOne("iamsng.Core.Entities.User", "ProgramManager")
                        .WithMany()
                        .HasForeignKey("ProgramManagerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_program_manager_user");

                    b.Navigation("ProgramManager");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Room", b =>
                {
                    b.HasOne("iamsng.Core.Entities.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_room_building");

                    b.HasOne("iamsng.Core.Entities.Floor", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_room_floor");

                    b.Navigation("Building");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("iamsng.Core.Entities.User", b =>
                {
                    b.HasOne("iamsng.Core.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_user_role");

                    b.HasOne("iamsng.Core.Entities.SmeRole", "SmeRole")
                        .WithMany("Users")
                        .HasForeignKey("SmeRoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_user_smerole");

                    b.Navigation("Role");

                    b.Navigation("SmeRole");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Floor", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("iamsng.Core.Entities.SmeRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
