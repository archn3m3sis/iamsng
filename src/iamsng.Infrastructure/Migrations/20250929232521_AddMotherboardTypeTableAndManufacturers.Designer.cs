// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iamsng.Infrastructure.Data;

#nullable disable

namespace iamsng.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250929232521_AddMotherboardTypeTableAndManufacturers")]
    partial class AddMotherboardTypeTableAndManufacturers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("iamsng.Core.Entities.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("building_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("building_number")
                        .HasComment("Unique building identifier/number");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("BuildingId")
                        .HasName("PK_building");

                    b.HasIndex("BuildingNumber")
                        .IsUnique()
                        .HasDatabaseName("UX_building_number");

                    b.ToTable("building", null, t =>
                        {
                            t.HasComment("Physical buildings where assets and equipment are located");
                        });

                    b.HasData(
                        new
                        {
                            BuildingId = 1,
                            BuildingNumber = "Building 370",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 2,
                            BuildingNumber = "Building 010",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 3,
                            BuildingNumber = "Building 012",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 4,
                            BuildingNumber = "Building 001",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 5,
                            BuildingNumber = "Building 014",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 6,
                            BuildingNumber = "Building 350",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 7,
                            BuildingNumber = "Building 377",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            BuildingId = 8,
                            BuildingNumber = "Building 403",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Condition", b =>
                {
                    b.Property<int>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("condition_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConditionId"));

                    b.Property<string>("ConditionDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("condition_description")
                        .HasComment("Detailed description of what this condition means");

                    b.Property<string>("ConditionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("condition_name")
                        .HasComment("Name or label of the condition state");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("ConditionId")
                        .HasName("PK_condition");

                    b.HasIndex("ConditionName")
                        .IsUnique()
                        .HasDatabaseName("IX_condition_name");

                    b.ToTable("condition", null, t =>
                        {
                            t.HasComment("Asset condition states for lifecycle and maintenance tracking");
                        });

                    b.HasData(
                        new
                        {
                            ConditionId = 1,
                            ConditionDescription = "Device is brand new, unused, and in original packaging",
                            ConditionName = "New",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 2,
                            ConditionDescription = "Device is in like-new condition with no visible wear or defects",
                            ConditionName = "Excellent",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 3,
                            ConditionDescription = "Device is fully functional with minor cosmetic wear but no operational issues",
                            ConditionName = "Good",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 4,
                            ConditionDescription = "Device is functional but shows moderate wear or has minor non-critical issues",
                            ConditionName = "Fair",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 5,
                            ConditionDescription = "Device has significant wear or operational issues but remains usable",
                            ConditionName = "Poor",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 6,
                            ConditionDescription = "Device is not operational and requires repair or replacement",
                            ConditionName = "Non-Functional",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 7,
                            ConditionDescription = "Device is currently being serviced or repaired",
                            ConditionName = "Under Repair",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 8,
                            ConditionDescription = "Device has been marked for disposal or decommissioning",
                            ConditionName = "Awaiting Disposal",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 9,
                            ConditionDescription = "Device has been properly disposed of or decommissioned",
                            ConditionName = "Disposed",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 10,
                            ConditionDescription = "Device cannot be located and is considered missing from inventory",
                            ConditionName = "Missing",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 11,
                            ConditionDescription = "Device has physical damage affecting functionality or safety",
                            ConditionName = "Damaged",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            ConditionId = 12,
                            ConditionDescription = "Device is outdated and no longer supported for operational use",
                            ConditionName = "Obsolete",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(4845), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.CpuType", b =>
                {
                    b.Property<int>("CpuTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cpu_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CpuTypeId"));

                    b.Property<string>("CpuTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cpu_type_name")
                        .HasComment("Name or designation of the CPU model/series");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("HardwareManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id")
                        .HasComment("Foreign key to hardware_manufacturer table");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("CpuTypeId")
                        .HasName("PK_cpu_type");

                    b.HasIndex("CpuTypeName")
                        .HasDatabaseName("IX_cpu_type_name");

                    b.HasIndex("HardwareManufacturerId")
                        .HasDatabaseName("IX_cpu_type_manufacturer");

                    b.HasIndex("CpuTypeName", "HardwareManufacturerId")
                        .HasDatabaseName("IX_cpu_type_name_manufacturer");

                    b.ToTable("cpu_type", null, t =>
                        {
                            t.HasComment("CPU types and models from various manufacturers");
                        });

                    b.HasData(
                        new
                        {
                            CpuTypeId = 1,
                            CpuTypeName = "Core i9 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 2,
                            CpuTypeName = "Core i7 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 3,
                            CpuTypeName = "Core i5 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 4,
                            CpuTypeName = "Core i3 14th Gen (Raptor Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 5,
                            CpuTypeName = "Core i9 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 6,
                            CpuTypeName = "Core i7 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 7,
                            CpuTypeName = "Core i5 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 8,
                            CpuTypeName = "Core i3 13th Gen (Raptor Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 9,
                            CpuTypeName = "Core i9 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 10,
                            CpuTypeName = "Core i7 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 11,
                            CpuTypeName = "Core i5 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 12,
                            CpuTypeName = "Core i3 12th Gen (Alder Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 13,
                            CpuTypeName = "Core i9 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 14,
                            CpuTypeName = "Core i7 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 15,
                            CpuTypeName = "Core i5 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 16,
                            CpuTypeName = "Core i3 11th Gen (Rocket Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 17,
                            CpuTypeName = "Core i9 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 18,
                            CpuTypeName = "Core i7 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 19,
                            CpuTypeName = "Core i5 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 20,
                            CpuTypeName = "Core i3 10th Gen (Comet Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 21,
                            CpuTypeName = "Core i9 9th Gen (Coffee Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 22,
                            CpuTypeName = "Core i7 9th Gen (Coffee Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 23,
                            CpuTypeName = "Core i5 9th Gen (Coffee Lake Refresh)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 24,
                            CpuTypeName = "Core i7 8th Gen (Coffee Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 25,
                            CpuTypeName = "Core i5 8th Gen (Coffee Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 26,
                            CpuTypeName = "Core i7 7th Gen (Kaby Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 27,
                            CpuTypeName = "Core i5 7th Gen (Kaby Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 28,
                            CpuTypeName = "Core i7 6th Gen (Skylake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 29,
                            CpuTypeName = "Core i5 6th Gen (Skylake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 30,
                            CpuTypeName = "Core i7 4th Gen (Haswell)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 31,
                            CpuTypeName = "Core i5 4th Gen (Haswell)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 32,
                            CpuTypeName = "Core i7 3rd Gen (Ivy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 33,
                            CpuTypeName = "Core i5 3rd Gen (Ivy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 34,
                            CpuTypeName = "Core i7 2nd Gen (Sandy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 35,
                            CpuTypeName = "Core i5 2nd Gen (Sandy Bridge)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 36,
                            CpuTypeName = "Core 2 Quad",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 37,
                            CpuTypeName = "Core 2 Duo",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 38,
                            CpuTypeName = "Xeon Scalable 5th Gen (Emerald Rapids)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 39,
                            CpuTypeName = "Xeon Scalable 4th Gen (Sapphire Rapids)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 40,
                            CpuTypeName = "Xeon Scalable 3rd Gen (Ice Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 41,
                            CpuTypeName = "Xeon Scalable 2nd Gen (Cascade Lake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 42,
                            CpuTypeName = "Xeon Scalable 1st Gen (Skylake)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 43,
                            CpuTypeName = "Xeon E7 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 44,
                            CpuTypeName = "Xeon E5 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 45,
                            CpuTypeName = "Xeon E3 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 46,
                            CpuTypeName = "Xeon W-3400 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 47,
                            CpuTypeName = "Xeon W-2400 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 48,
                            CpuTypeName = "Xeon W Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 49,
                            CpuTypeName = "Xeon D Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 50,
                            CpuTypeName = "Xeon Phi",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 51,
                            CpuTypeName = "Pentium Gold Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 52,
                            CpuTypeName = "Pentium Silver Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 53,
                            CpuTypeName = "Pentium 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 54,
                            CpuTypeName = "Pentium III",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 55,
                            CpuTypeName = "Celeron Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 56,
                            CpuTypeName = "Atom x7 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 57,
                            CpuTypeName = "Atom x5 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 58,
                            CpuTypeName = "Atom C Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 59,
                            CpuTypeName = "Ryzen 9 7950X3D",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 60,
                            CpuTypeName = "Ryzen 9 7950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 61,
                            CpuTypeName = "Ryzen 9 7900X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 62,
                            CpuTypeName = "Ryzen 7 7800X3D",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 63,
                            CpuTypeName = "Ryzen 7 7700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 64,
                            CpuTypeName = "Ryzen 5 7600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 65,
                            CpuTypeName = "Ryzen 9 5950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 66,
                            CpuTypeName = "Ryzen 9 5900X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 67,
                            CpuTypeName = "Ryzen 7 5800X3D",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 68,
                            CpuTypeName = "Ryzen 7 5800X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 69,
                            CpuTypeName = "Ryzen 7 5700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 70,
                            CpuTypeName = "Ryzen 5 5600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 71,
                            CpuTypeName = "Ryzen 5 5600",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 72,
                            CpuTypeName = "Ryzen 3 5300G",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 73,
                            CpuTypeName = "Ryzen 9 3950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 74,
                            CpuTypeName = "Ryzen 9 3900X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 75,
                            CpuTypeName = "Ryzen 7 3800X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 76,
                            CpuTypeName = "Ryzen 7 3700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 77,
                            CpuTypeName = "Ryzen 5 3600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 78,
                            CpuTypeName = "Ryzen 5 3600",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 79,
                            CpuTypeName = "Ryzen 7 2700X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 80,
                            CpuTypeName = "Ryzen 5 2600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 81,
                            CpuTypeName = "Ryzen 7 1800X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 82,
                            CpuTypeName = "Ryzen 5 1600X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 83,
                            CpuTypeName = "Ryzen Threadripper 7980X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 84,
                            CpuTypeName = "Ryzen Threadripper 7970X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 85,
                            CpuTypeName = "Ryzen Threadripper PRO 7995WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 86,
                            CpuTypeName = "Ryzen Threadripper PRO 7985WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 87,
                            CpuTypeName = "Ryzen Threadripper PRO 5995WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 88,
                            CpuTypeName = "Ryzen Threadripper PRO 5975WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 89,
                            CpuTypeName = "Ryzen Threadripper 3990X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 90,
                            CpuTypeName = "Ryzen Threadripper 3970X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 91,
                            CpuTypeName = "Ryzen Threadripper 2990WX",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 92,
                            CpuTypeName = "Ryzen Threadripper 1950X",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 93,
                            CpuTypeName = "EPYC 9754 (Genoa)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 94,
                            CpuTypeName = "EPYC 9654 (Genoa)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 95,
                            CpuTypeName = "EPYC 9554 (Genoa)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 96,
                            CpuTypeName = "EPYC 9374F (Genoa-X)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 97,
                            CpuTypeName = "EPYC 7773X (Milan-X)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 98,
                            CpuTypeName = "EPYC 7763 (Milan)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 99,
                            CpuTypeName = "EPYC 7713 (Milan)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 100,
                            CpuTypeName = "EPYC 7H12 (Rome)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 101,
                            CpuTypeName = "EPYC 7742 (Rome)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 102,
                            CpuTypeName = "EPYC 7601 (Naples)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 103,
                            CpuTypeName = "EPYC 7551 (Naples)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 104,
                            CpuTypeName = "Athlon 3000G",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 105,
                            CpuTypeName = "Athlon 200GE",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 106,
                            CpuTypeName = "Athlon 64 X2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 107,
                            CpuTypeName = "Athlon 64",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 108,
                            CpuTypeName = "Opteron 6000 Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 109,
                            CpuTypeName = "FX-8350",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 110,
                            CpuTypeName = "FX-8150",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 111,
                            CpuTypeName = "A10 APU Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 112,
                            CpuTypeName = "A8 APU Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 113,
                            CpuTypeName = "A6 APU Series",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 114,
                            CpuTypeName = "M3 Max",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 115,
                            CpuTypeName = "M3 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 116,
                            CpuTypeName = "M3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 117,
                            CpuTypeName = "M2 Ultra",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 118,
                            CpuTypeName = "M2 Max",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 119,
                            CpuTypeName = "M2 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 120,
                            CpuTypeName = "M2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 121,
                            CpuTypeName = "M1 Ultra",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 122,
                            CpuTypeName = "M1 Max",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 123,
                            CpuTypeName = "M1 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 124,
                            CpuTypeName = "M1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 125,
                            CpuTypeName = "A17 Pro",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 126,
                            CpuTypeName = "A16 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 127,
                            CpuTypeName = "A15 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 128,
                            CpuTypeName = "A14 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 129,
                            CpuTypeName = "A13 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 130,
                            CpuTypeName = "A12 Bionic",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 73,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 131,
                            CpuTypeName = "Snapdragon 8 Gen 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 132,
                            CpuTypeName = "Snapdragon 8 Gen 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 133,
                            CpuTypeName = "Snapdragon 8 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 134,
                            CpuTypeName = "Snapdragon 888",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 135,
                            CpuTypeName = "Snapdragon 865",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 136,
                            CpuTypeName = "Snapdragon 7+ Gen 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 137,
                            CpuTypeName = "Snapdragon 7 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 138,
                            CpuTypeName = "Snapdragon 6 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 139,
                            CpuTypeName = "Snapdragon 4 Gen 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 53,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 140,
                            CpuTypeName = "Cortex-A78",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 141,
                            CpuTypeName = "Cortex-A77",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 142,
                            CpuTypeName = "Cortex-A76",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 143,
                            CpuTypeName = "Cortex-A75",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 144,
                            CpuTypeName = "Cortex-A73",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 145,
                            CpuTypeName = "Cortex-A72",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 146,
                            CpuTypeName = "Cortex-R82",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 147,
                            CpuTypeName = "Cortex-R52",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 148,
                            CpuTypeName = "Cortex-M85",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 149,
                            CpuTypeName = "Cortex-M55",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 150,
                            CpuTypeName = "Cortex-M33",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 151,
                            CpuTypeName = "Neoverse V2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 152,
                            CpuTypeName = "Neoverse N2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 153,
                            CpuTypeName = "Neoverse N1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 57,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 154,
                            CpuTypeName = "POWER10",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 155,
                            CpuTypeName = "POWER9",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 156,
                            CpuTypeName = "POWER8",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 157,
                            CpuTypeName = "POWER7",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 5,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 158,
                            CpuTypeName = "SPARC M8",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 167,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 159,
                            CpuTypeName = "SPARC M7",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 167,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 160,
                            CpuTypeName = "SPARC T5",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 167,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 161,
                            CpuTypeName = "Graviton3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 168,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 162,
                            CpuTypeName = "Graviton2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 168,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 163,
                            CpuTypeName = "Graviton",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 168,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 164,
                            CpuTypeName = "Dimensity 9300",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 165,
                            CpuTypeName = "Dimensity 9200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 166,
                            CpuTypeName = "Dimensity 9000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 167,
                            CpuTypeName = "Dimensity 8300",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 168,
                            CpuTypeName = "Dimensity 8200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 169,
                            CpuTypeName = "Dimensity 7200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 56,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 170,
                            CpuTypeName = "Exynos 2400",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 63,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 171,
                            CpuTypeName = "Exynos 2200",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 63,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 172,
                            CpuTypeName = "Exynos 2100",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 63,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 173,
                            CpuTypeName = "Kirin 9000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 31,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 174,
                            CpuTypeName = "Kirin 990",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 31,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 175,
                            CpuTypeName = "Loongson 3A6000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 169,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 176,
                            CpuTypeName = "Loongson 3A5000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 169,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 177,
                            CpuTypeName = "Godson (龙芯)",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 169,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 178,
                            CpuTypeName = "Zhaoxin KX-6000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 170,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 179,
                            CpuTypeName = "VIA C7",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 171,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            CpuTypeId = 180,
                            CpuTypeName = "Phytium FT-2000",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 172,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 899, DateTimeKind.Unspecified).AddTicks(6924), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("floor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("FloorNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("floor_number")
                        .HasComment("Unique floor identifier/number");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("FloorId")
                        .HasName("PK_floor");

                    b.HasIndex("FloorNumber")
                        .IsUnique()
                        .HasDatabaseName("UX_floor_number");

                    b.ToTable("floor", null, t =>
                        {
                            t.HasComment("Floor/level definitions that exist across multiple buildings");
                        });

                    b.HasData(
                        new
                        {
                            FloorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorNumber = "Floor 001",
                            Version = 1
                        },
                        new
                        {
                            FloorId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorNumber = "Floor 002",
                            Version = 1
                        },
                        new
                        {
                            FloorId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorNumber = "Floor Ground",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.GpuType", b =>
                {
                    b.Property<int>("GpuTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gpu_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GpuTypeId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("GpuTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gpu_type_name")
                        .HasComment("Name or designation of the GPU model/series");

                    b.Property<int>("HardwareManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id")
                        .HasComment("Foreign key to hardware_manufacturer table");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("GpuTypeId")
                        .HasName("PK_gpu_types");

                    b.HasIndex("GpuTypeName")
                        .HasDatabaseName("IX_gpu_types_name");

                    b.HasIndex("HardwareManufacturerId")
                        .HasDatabaseName("IX_gpu_types_manufacturer");

                    b.ToTable("gpu_types", null, t =>
                        {
                            t.HasComment("GPU types and models from various manufacturers");
                        });

                    b.HasData(
                        new
                        {
                            GpuTypeId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce RTX 40 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce RTX 30 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce RTX 20 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 16 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 10 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 900 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "GeForce GTX 700 Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro RTX Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro P Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro M Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Quadro K Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "RTX A Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla V100",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla P100",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla K80",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Tesla M Series",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "A100 Tensor Core",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "H100 Tensor Core",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "L40S",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "T4 Tensor Core",
                            HardwareManufacturerId = 52,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 7000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 6000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 5000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX Vega Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 500 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon RX 400 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro W7000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro W6000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro W5000 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro WX Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Radeon Pro Vega Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "FirePro W Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "FirePro S Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Instinct MI300 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Instinct MI200 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Instinct MI100 Series",
                            HardwareManufacturerId = 51,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Arc A Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "Iris Xe Graphics",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "UHD Graphics 700 Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "UHD Graphics 600 Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            GpuTypeId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            GpuTypeName = "HD Graphics 500 Series",
                            HardwareManufacturerId = 50,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(1174), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.HardwareManufacturer", b =>
                {
                    b.Property<int>("HardwareManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardwareManufacturerId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("HardwareManufacturerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("hardware_manufacturer_name")
                        .HasComment("Name of the hardware manufacturer or vendor");

                    b.Property<string>("IconFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("hwmanu_icon_file")
                        .HasComment("Filename of manufacturer icon/logo in wwwroot/images/hw_manufacturers/");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("ProductionFocus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hwmanu_production_focus")
                        .HasComment("Primary production focus or specialization");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("HardwareManufacturerId")
                        .HasName("PK_hardware_manufacturer");

                    b.HasIndex("HardwareManufacturerName")
                        .HasDatabaseName("IX_hardware_manufacturer_name");

                    b.HasIndex("ProductionFocus")
                        .HasDatabaseName("IX_hardware_manufacturer_focus");

                    b.HasIndex("HardwareManufacturerName", "ProductionFocus")
                        .HasDatabaseName("IX_hardware_manufacturer_name_focus");

                    b.ToTable("hardware_manufacturer", null, t =>
                        {
                            t.HasComment("Hardware manufacturers and vendors with production focus for asset management");
                        });

                    b.HasData(
                        new
                        {
                            HardwareManufacturerId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Dell Technologies (Dell, EMC)",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Hewlett Packard Enterprise (HPE)",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HP Inc.",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Lenovo (ThinkPad, ThinkStation)",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "IBM",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Supermicro",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Fujitsu",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NEC",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Acer",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ASUS",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "MSI",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Gigabyte",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Origin PC",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "System76",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Puget Systems",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Cisco Systems",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Juniper Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Aruba Networks (HPE)",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Fortinet",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Palo Alto Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Check Point",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Extreme Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Ruckus Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Ubiquiti",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Netgear",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "D-Link",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "TP-Link",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Linksys",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Mikrotik",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Cambium Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Huawei",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ZTE",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Nokia",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Ericsson",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "F5 Networks",
                            ProductionFocus = "Networking Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NetApp",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Pure Storage",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Dell EMC",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HPE (Nimble, 3PAR)",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "IBM (FlashSystem)",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Hitachi Vantara",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Western Digital",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Seagate Technology",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "QNAP",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Synology",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Drobo",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Promise Technology",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Quantum Corporation",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Spectra Logic",
                            ProductionFocus = "Storage Solutions",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Intel",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "AMD",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NVIDIA",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Qualcomm",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Broadcom",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Marvell",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "MediaTek",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ARM Holdings",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Texas Instruments",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Analog Devices",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Microchip Technology",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NXP Semiconductors",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Infineon Technologies",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Samsung",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SK Hynix",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Micron Technology",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Kingston Technology",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Corsair",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "G.Skill",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Crucial (Micron)",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ADATA",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SanDisk (Western Digital)",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Toshiba Memory (Kioxia)",
                            ProductionFocus = "Memory & Flash Storage",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Apple",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Samsung",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Google (Pixel)",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "OnePlus",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Xiaomi",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Huawei",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Oppo",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Vivo",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Motorola",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "LG (discontinued)",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sony",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HTC",
                            ProductionFocus = "Mobile Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Siemens",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Schneider Electric",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Rockwell Automation",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Honeywell",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "General Electric (GE)",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ABB",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Emerson",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Yokogawa",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Omron",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Mitsubishi Electric",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Fanuc",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Phoenix Contact",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Wago",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Beckhoff",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "B&R Automation",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Advantech",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 101,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Moxa",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 102,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Digi International",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 103,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sierra Wireless",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 104,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Telit",
                            ProductionFocus = "Industrial/IoT Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 105,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "RSA Security",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 106,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Thales Group",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 107,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Gemalto (Thales)",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 108,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SafeNet (Thales)",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 109,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Yubico",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 110,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SonicWall",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 111,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "WatchGuard",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 112,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Barracuda Networks",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 113,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Imperva",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 114,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "A10 Networks",
                            ProductionFocus = "Security Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 115,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Samsung Display",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 116,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "LG Display",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 117,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sony",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 118,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sharp",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 119,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Panasonic",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 120,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ViewSonic",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 121,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "BenQ",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 122,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "AOC",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 123,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Acer",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 124,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ASUS",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 125,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Dell",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 126,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HP",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 127,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Eizo",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 128,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "NEC Display",
                            ProductionFocus = "Display Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 129,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "APC (Schneider Electric)",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 130,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Eaton",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 131,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Vertiv (Liebert)",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 132,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Tripp Lite",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 133,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "CyberPower",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 134,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Rittal",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 135,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Panduit",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 136,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Legrand",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 137,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Raritan",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 138,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Server Technology",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 139,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Chatsworth Products",
                            ProductionFocus = "Power & Infrastructure",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 140,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Logitech",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 141,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Microsoft",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 142,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Razer",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 143,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Corsair",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 144,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SteelSeries",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 145,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HyperX",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 146,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Audio-Technica",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 147,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Sennheiser",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 148,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Plantronics (Poly)",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 149,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Jabra",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 150,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Wacom",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 151,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Epson",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 152,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Canon",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 153,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Brother",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 154,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Xerox",
                            ProductionFocus = "Peripherals & Accessories",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 155,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Tesla (automotive tech)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 156,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "SpaceX (aerospace)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 157,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Boston Dynamics (robotics)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 158,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Magic Leap (AR/VR)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 159,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Oculus (Meta)",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 160,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "HTC Vive",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 161,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Varjo",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 162,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "3D Systems",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 163,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Stratasys",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 164,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Formlabs",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 165,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "MakerBot",
                            ProductionFocus = "Specialized & Emerging Tech",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 166,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Matrox",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 167,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Oracle",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 168,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Amazon (AWS)",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 169,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Loongson",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 170,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Zhaoxin",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 171,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "VIA Technologies",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 172,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Phytium",
                            ProductionFocus = "Processors & Components",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 173,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ASRock",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 174,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Tyan",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 175,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "Biostar",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        },
                        new
                        {
                            HardwareManufacturerId = 176,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerName = "ECS",
                            ProductionFocus = "Computing Hardware",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.HwEnclosure", b =>
                {
                    b.Property<int>("HwEnclosureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hw_enclosure_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HwEnclosureId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("EnclosureDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("enclosure_description")
                        .HasComment("Detailed description of the enclosure type and use case");

                    b.Property<string>("EnclosureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("enclosure_name")
                        .HasComment("Name or type of the hardware enclosure");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("HwEnclosureId")
                        .HasName("PK_hw_enclosure");

                    b.HasIndex("EnclosureName")
                        .IsUnique()
                        .HasDatabaseName("IX_hw_enclosure_name");

                    b.ToTable("hw_enclosure", null, t =>
                        {
                            t.HasComment("Hardware enclosure types defining form factors and mounting styles");
                        });

                    b.HasData(
                        new
                        {
                            HwEnclosureId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Standard 19-inch server rack mountable enclosure",
                            EnclosureName = "Server Rackmount Enclosure",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Vertical tower case design for standalone server or workstation",
                            EnclosureName = "Tower",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Modular blade server enclosure housing multiple blade servers",
                            EnclosureName = "Blade",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Standard desktop computer case",
                            EnclosureName = "Desktop",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Compact desktop enclosure with reduced footprint",
                            EnclosureName = "Small Form Factor",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Integrated enclosure with display and computer components",
                            EnclosureName = "All-in-One",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Laptop or notebook form factor enclosure",
                            EnclosureName = "Portable",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Slate-style touchscreen mobile device enclosure",
                            EnclosureName = "Tablet",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Multi-node chassis for rack-mounted server systems",
                            EnclosureName = "Rackmount Chassis",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Purpose-built enclosure for network devices",
                            EnclosureName = "Network Appliance",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Ruggedized enclosure for harsh industrial environments",
                            EnclosureName = "Industrial PC",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Enclosure designed for DIN rail mounting in control panels",
                            EnclosureName = "DIN Rail Mount",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Enclosure designed for wall-mounted installation",
                            EnclosureName = "Wall Mount",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Weather-resistant enclosure for outdoor deployment",
                            EnclosureName = "Outdoor Rated",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Enclosure meeting NEMA environmental protection standards",
                            EnclosureName = "NEMA Rated",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        },
                        new
                        {
                            HwEnclosureId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            EnclosureDescription = "Compact embedded system enclosure",
                            EnclosureName = "Embedded",
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Installation", b =>
                {
                    b.Property<int>("InstallationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("installation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstallationId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("InstallationAreaOfExcellence")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("installation_area_of_excellence")
                        .HasComment("Primary area of excellence or specialization for this installation");

                    b.Property<string>("InstallationCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("installation_city")
                        .HasComment("City where installation is located");

                    b.Property<string>("InstallationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("installation_name")
                        .HasComment("Name of the military installation");

                    b.Property<string>("InstallationState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("installation_state")
                        .HasComment("State where installation is located");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("InstallationId")
                        .HasName("PK_installation");

                    b.HasIndex("InstallationAreaOfExcellence")
                        .HasDatabaseName("IX_installation_area_excellence");

                    b.HasIndex("InstallationName")
                        .HasDatabaseName("IX_installation_name");

                    b.HasIndex("InstallationState")
                        .HasDatabaseName("IX_installation_state");

                    b.HasIndex("InstallationState", "InstallationCity")
                        .HasDatabaseName("IX_installation_state_city");

                    b.ToTable("installation", null, t =>
                        {
                            t.HasComment("Military installations/bases with area of excellence for asset management");
                        });

                    b.HasData(
                        new
                        {
                            InstallationId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Ground Combat Vehicles",
                            InstallationCity = "Anniston",
                            InstallationName = "Anniston Army Depot",
                            InstallationState = "Alabama",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air Assault",
                            InstallationCity = "Fort Campbell",
                            InstallationName = "Fort Campbell",
                            InstallationState = "Kentucky",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Armored Warfare",
                            InstallationCity = "Killeen",
                            InstallationName = "Fort Cavazos",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Cyber Warfare",
                            InstallationCity = "Augusta",
                            InstallationName = "Fort Eisenhower",
                            InstallationState = "Georgia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Special Operations",
                            InstallationCity = "Fayetteville",
                            InstallationName = "Fort Liberty",
                            InstallationState = "North Carolina",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Maneuver Center of Excellence",
                            InstallationCity = "Columbus",
                            InstallationName = "Fort Moore",
                            InstallationState = "Georgia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Power Projection Platform",
                            InstallationCity = "Tacoma",
                            InstallationName = "Joint Base Lewis-McChord",
                            InstallationState = "Washington",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Missile and Ammunition",
                            InstallationCity = "Chambersburg",
                            InstallationName = "Letterkenny Army Depot",
                            InstallationState = "Pennsylvania",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Combat Vehicle Repair",
                            InstallationCity = "Texarkana",
                            InstallationName = "Red River Army Depot",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Manufacturing and Logistics",
                            InstallationCity = "Rock Island",
                            InstallationName = "Rock Island Arsenal",
                            InstallationState = "Illinois",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Ammunition Storage",
                            InstallationCity = "Herlong",
                            InstallationName = "Sierra Army Depot",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Communications Electronics",
                            InstallationCity = "Tobyhanna",
                            InstallationName = "Tobyhanna Army Depot",
                            InstallationState = "Pennsylvania",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Cannon Manufacturing",
                            InstallationCity = "Watervliet",
                            InstallationName = "Watervliet Arsenal",
                            InstallationState = "New York",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air Defense Artillery",
                            InstallationCity = "El Paso",
                            InstallationName = "Fort Bliss",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Mountain Warfare",
                            InstallationCity = "Colorado Springs",
                            InstallationName = "Fort Carson",
                            InstallationState = "Colorado",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Cold Weather Training",
                            InstallationCity = "Watertown",
                            InstallationName = "Fort Drum",
                            InstallationState = "New York",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Intelligence Training",
                            InstallationCity = "Sierra Vista",
                            InstallationName = "Fort Huachuca",
                            InstallationState = "Arizona",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "National Training Center",
                            InstallationCity = "Barstow",
                            InstallationName = "Fort Irwin",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Joint Readiness Training Center",
                            InstallationCity = "Leesville",
                            InstallationName = "Fort Johnson",
                            InstallationState = "Louisiana",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Human Resources",
                            InstallationCity = "Fort Knox",
                            InstallationName = "Fort Knox",
                            InstallationState = "Kentucky",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Combined Arms Center",
                            InstallationCity = "Leavenworth",
                            InstallationName = "Fort Leavenworth",
                            InstallationState = "Kansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Sustainment",
                            InstallationCity = "Petersburg",
                            InstallationName = "Fort Lee",
                            InstallationState = "Virginia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Engineer Training",
                            InstallationCity = "St. Robert",
                            InstallationName = "Fort Leonard Wood",
                            InstallationState = "Missouri",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Aviation Training",
                            InstallationCity = "Daleville",
                            InstallationName = "Fort Novosel",
                            InstallationState = "Alabama",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Division Headquarters",
                            InstallationCity = "Junction City",
                            InstallationName = "Fort Riley",
                            InstallationState = "Kansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Field Artillery",
                            InstallationCity = "Lawton",
                            InstallationName = "Fort Sill",
                            InstallationState = "Oklahoma",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Heavy Mechanized Infantry",
                            InstallationCity = "Hinesville",
                            InstallationName = "Fort Stewart",
                            InstallationState = "Georgia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Arctic Warfare",
                            InstallationCity = "Fairbanks",
                            InstallationName = "Fort Wainwright",
                            InstallationState = "Alaska",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Pacific Air Power",
                            InstallationCity = "Anchorage",
                            InstallationName = "Joint Base Elmendorf-Richardson",
                            InstallationState = "Alaska",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air Combat Command",
                            InstallationCity = "Hampton",
                            InstallationName = "Joint Base Langley-Eustis",
                            InstallationState = "Virginia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Military Medical Training",
                            InstallationCity = "San Antonio",
                            InstallationName = "Joint Base San Antonio",
                            InstallationState = "Texas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Armaments Research",
                            InstallationCity = "Dover",
                            InstallationName = "Picatinny Arsenal",
                            InstallationState = "New Jersey",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Chemical/Biological Defense",
                            InstallationCity = "Pine Bluff",
                            InstallationName = "Pine Bluff Arsenal",
                            InstallationState = "Arkansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Missile and Space",
                            InstallationCity = "Huntsville",
                            InstallationName = "Redstone Arsenal",
                            InstallationState = "Alabama",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Test and Evaluation",
                            InstallationCity = "Aberdeen",
                            InstallationName = "Aberdeen Proving Ground",
                            InstallationState = "Maryland",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Chemical/Biological Testing",
                            InstallationCity = "Dugway",
                            InstallationName = "Dugway Proving Ground",
                            InstallationState = "Utah",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Missile Testing",
                            InstallationCity = "Las Cruces",
                            InstallationName = "White Sands Missile Range",
                            InstallationState = "New Mexico",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Desert Testing",
                            InstallationCity = "Yuma",
                            InstallationName = "Yuma Proving Ground",
                            InstallationState = "Arizona",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Mobilization Training",
                            InstallationCity = "Edinburgh",
                            InstallationName = "Camp Atterbury",
                            InstallationState = "Indiana",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "National Guard Training",
                            InstallationCity = "Johnston",
                            InstallationName = "Camp Dodge",
                            InstallationState = "Iowa",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Joint Maneuver Training",
                            InstallationCity = "Grayling",
                            InstallationName = "Camp Grayling",
                            InstallationState = "Michigan",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Winter Operations",
                            InstallationCity = "Little Falls",
                            InstallationName = "Camp Ripley",
                            InstallationState = "Minnesota",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Mobilization Site",
                            InstallationCity = "Hattiesburg",
                            InstallationName = "Camp Shelby",
                            InstallationState = "Mississippi",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Joint Training",
                            InstallationCity = "Fort Smith",
                            InstallationName = "Fort Chaffee",
                            InstallationState = "Arkansas",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Combat Support Training",
                            InstallationCity = "Jolon",
                            InstallationName = "Fort Hunter Liggett",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Reserve Training",
                            InstallationCity = "Sparta",
                            InstallationName = "Fort McCoy",
                            InstallationState = "Wisconsin",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Foreign Military Training",
                            InstallationCity = "Blackstone",
                            InstallationName = "Fort Pickett",
                            InstallationState = "Virginia",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Regional Training",
                            InstallationCity = "Helena",
                            InstallationName = "Fort William Henry Harrison",
                            InstallationState = "Montana",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Air National Guard",
                            InstallationCity = "Boise",
                            InstallationName = "Gowen Field",
                            InstallationState = "Idaho",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Munitions Storage",
                            InstallationCity = "Bellemont",
                            InstallationName = "Camp Navajo",
                            InstallationState = "Arizona",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Reserve Operations",
                            InstallationCity = "Dublin",
                            InstallationName = "Camp Parks",
                            InstallationState = "California",
                            Version = 1
                        },
                        new
                        {
                            InstallationId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            InstallationAreaOfExcellence = "Maneuver Training",
                            InstallationCity = "Bastrop",
                            InstallationName = "Camp Swift",
                            InstallationState = "Texas",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.MotherboardType", b =>
                {
                    b.Property<int>("MoboTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mobo_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoboTypeId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("HardwareManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("hardware_manufacturer_id");

                    b.Property<string>("MoboTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mobo_type_name");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("MoboTypeId");

                    b.HasIndex("HardwareManufacturerId");

                    b.HasIndex("MoboTypeName")
                        .IsUnique()
                        .HasDatabaseName("UX_motherboard_type_name");

                    b.ToTable("motherboard_type");

                    b.HasData(
                        new
                        {
                            MoboTypeId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Z790 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Z690 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "B760 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "B660 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "H770 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "H610 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "X670E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "X670 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "B650E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "B650 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "A620 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "TRX50 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "WRX90 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "W680 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "C621 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "C246 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI Z790 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI Z690 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI B760 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI B660 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI H770 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI X670E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI X670 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI B650E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI B650 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI A620 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI TRX50 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI WRX90 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI C621 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte Z790 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte Z690 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte B760 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte B660 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte H770 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte X670E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte X670 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte B650E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte B650 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte A620 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte TRX50 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte WRX90 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock Z790 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock Z690 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock B760 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock B660 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock H770 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock X670E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock X670 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock B650E Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock B650 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock A620 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock TRX50 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock WRX90 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "X11 Series LGA3647 ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "X12 Series LGA4189 ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "X13 Series LGA4677 ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "H11 Series SP3 ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "H12 Series SP3 ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "H13 Series SP5 ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "A2 Series ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "M11 Series Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "M12 Series Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "X11DPi-N Dual Socket",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "X12DPi-N6 Dual Socket",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "H11DSi Dual Socket EPYC",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "H12DSi Dual Socket EPYC",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "PowerEdge R740 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "PowerEdge R750 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "PowerEdge R760 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "PowerEdge R640 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "PowerEdge R650 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "PowerEdge T550 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "Precision 7920 Workstation Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "Precision 7960 Workstation Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "OptiPlex 7010 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "OptiPlex 7090 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 1,
                            MoboTypeName = "Latitude 5430 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "ProLiant DL380 Gen10 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "ProLiant DL380 Gen10 Plus System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "ProLiant DL360 Gen10 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "ProLiant DL360 Gen10 Plus System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "ProLiant ML350 Gen10 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "ProLiant DL580 Gen10 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "Z8 G4 Workstation Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "Z6 G5 Workstation Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 2,
                            MoboTypeName = "EliteDesk 800 G9 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkSystem SR650 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkSystem SR850 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkSystem SR950 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkSystem ST650 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkStation P620 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkStation P920 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkStation P360 System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 4,
                            MoboTypeName = "ThinkCentre M90a System Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Z590 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Z490 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "X570 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "X470 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "B550 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "B450 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 101,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI Z590 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 102,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI Z490 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 103,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI X570 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 104,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI X470 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 105,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI B550 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 106,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI B450 Chipset Micro-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 107,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte Z590 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 108,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte Z490 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 109,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte X570 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 110,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte B550 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 111,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock Z590 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 112,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock Z490 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 113,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock X570 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 114,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock B550 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 115,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Mini-ITX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 116,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Mini-ITX Z690",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 117,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Mini-ITX B650",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 118,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "Mini-ITX X670",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 119,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI Mini-ITX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 120,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI Mini-ITX B650",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 121,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte Mini-ITX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 122,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte Mini-ITX B650",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 123,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock Mini-ITX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 124,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock Mini-ITX B650",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 125,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "E-ATX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 126,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "E-ATX X670E",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 127,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI E-ATX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 128,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI E-ATX X670E",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 129,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte E-ATX Z790",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 130,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte E-ATX X670E",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 131,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "C621E Chipset SSI-EEB",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 132,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "C627 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 133,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 6,
                            MoboTypeName = "C621A Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 134,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "X299 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 135,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI X299 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 136,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte X299 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 137,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "X399 Chipset ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 138,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI X399 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 139,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "TRX40 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 140,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 11,
                            MoboTypeName = "MSI TRX40 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 141,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 12,
                            MoboTypeName = "Gigabyte TRX40 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 142,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock TRX40 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 143,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 10,
                            MoboTypeName = "WRX80 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 144,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 173,
                            MoboTypeName = "ASRock WRX80 Chipset E-ATX",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 145,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            MoboTypeName = "Intel S2600 Series",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 146,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            MoboTypeName = "Intel S1200 Series",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 147,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 50,
                            MoboTypeName = "Intel C236 Chipset",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 148,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            MoboTypeName = "AMD EPYC Rome Platform",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 149,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 51,
                            MoboTypeName = "AMD EPYC Milan Platform",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 150,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 174,
                            MoboTypeName = "Tyan S8030 Series",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 151,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 174,
                            MoboTypeName = "Tyan Thunder Series",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 152,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 175,
                            MoboTypeName = "Biostar Racing Series",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 153,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 176,
                            MoboTypeName = "ECS Server Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 154,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 7,
                            MoboTypeName = "Fujitsu Primergy Board",
                            Version = 1
                        },
                        new
                        {
                            MoboTypeId = 155,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            HardwareManufacturerId = 16,
                            MoboTypeName = "Cisco UCS C-Series Board",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.OsBuild", b =>
                {
                    b.Property<int>("OsBuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("os_build_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsBuildId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("OsBuildDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("os_build_description");

                    b.Property<string>("OsBuildName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("os_build_name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("OsBuildId");

                    b.HasIndex("OsBuildName")
                        .IsUnique()
                        .HasDatabaseName("UX_os_build_name");

                    b.ToTable("os_build");

                    b.HasData(
                        new
                        {
                            OsBuildId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from December 2024 with latest security and feature updates",
                            OsBuildName = "26100.2605",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from November 2024 update",
                            OsBuildName = "26100.2454",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from October 2024 update",
                            OsBuildName = "26100.2314",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from September 2024 update",
                            OsBuildName = "26100.2161",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from August 2024 update",
                            OsBuildName = "26100.1742",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from July 2024 update",
                            OsBuildName = "26100.1591",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from June 2024 update",
                            OsBuildName = "26100.151",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from May 2024 Insider Preview",
                            OsBuildName = "26100.115",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from April 2024 Insider Preview",
                            OsBuildName = "26100.994",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 24H2 build from March 2024 Insider Preview",
                            OsBuildName = "26100.712",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from December 2024 with latest cumulative updates",
                            OsBuildName = "22631.4602",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from November 2024 update",
                            OsBuildName = "22631.446",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from October 2024 update",
                            OsBuildName = "22631.4317",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from September 2024 update",
                            OsBuildName = "22631.4169",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from August 2024 update",
                            OsBuildName = "22631.4037",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from July 2024 update",
                            OsBuildName = "22631.388",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from June 2024 update",
                            OsBuildName = "22631.3737",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from May 2024 update",
                            OsBuildName = "22631.3593",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from April 2024 update",
                            OsBuildName = "22631.3527",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from March 2024 update",
                            OsBuildName = "22631.3374",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from February 2024 update",
                            OsBuildName = "22631.3235",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from January 2024 update",
                            OsBuildName = "22631.3085",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from December 2023 update",
                            OsBuildName = "22631.2861",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from November 2023 update",
                            OsBuildName = "22631.2715",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 build from October 2023 update",
                            OsBuildName = "22631.2506",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 23H2 initial release build from September 2023",
                            OsBuildName = "22631.2428",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from July 2024 update",
                            OsBuildName = "22621.388",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from June 2024 update",
                            OsBuildName = "22621.3737",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from May 2024 update",
                            OsBuildName = "22621.3593",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from April 2024 update",
                            OsBuildName = "22621.3527",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from March 2024 update",
                            OsBuildName = "22621.3374",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from February 2024 update",
                            OsBuildName = "22621.3235",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from January 2024 update",
                            OsBuildName = "22621.3085",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from December 2023 update",
                            OsBuildName = "22621.2861",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from November 2023 update",
                            OsBuildName = "22621.2715",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from October 2023 update",
                            OsBuildName = "22621.2506",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from September 2023 update",
                            OsBuildName = "22621.2428",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from August 2023 update",
                            OsBuildName = "22621.2283",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from July 2023 update",
                            OsBuildName = "22621.2134",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from June 2023 update",
                            OsBuildName = "22621.1992",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from May 2023 update",
                            OsBuildName = "22621.1848",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from April 2023 update",
                            OsBuildName = "22621.1778",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from March 2023 update",
                            OsBuildName = "22621.1635",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from February 2023 update",
                            OsBuildName = "22621.1555",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from January 2023 update",
                            OsBuildName = "22621.1413",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from December 2022 update",
                            OsBuildName = "22621.1265",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from November 2022 update",
                            OsBuildName = "22621.963",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from October 2022 update",
                            OsBuildName = "22621.819",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 build from September 2022 update",
                            OsBuildName = "22621.674",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 22H2 initial release build from September 2022",
                            OsBuildName = "22621.608",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from December 2023 final update",
                            OsBuildName = "22000.296",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from November 2023 update",
                            OsBuildName = "22000.2836",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from October 2023 update",
                            OsBuildName = "22000.2652",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from September 2023 update",
                            OsBuildName = "22000.2538",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from August 2023 update",
                            OsBuildName = "22000.2416",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from July 2023 update",
                            OsBuildName = "22000.2295",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from June 2023 update",
                            OsBuildName = "22000.2176",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from May 2023 update",
                            OsBuildName = "22000.2057",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from April 2023 update",
                            OsBuildName = "22000.1936",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from March 2023 update",
                            OsBuildName = "22000.1817",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from February 2023 update",
                            OsBuildName = "22000.1696",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from January 2023 update",
                            OsBuildName = "22000.1574",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from December 2022 update",
                            OsBuildName = "22000.1455",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from November 2022 update",
                            OsBuildName = "22000.1335",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from October 2022 update",
                            OsBuildName = "22000.1219",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from September 2022 update",
                            OsBuildName = "22000.1098",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from August 2022 update",
                            OsBuildName = "22000.978",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from July 2022 update",
                            OsBuildName = "22000.856",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from June 2022 update",
                            OsBuildName = "22000.795",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from May 2022 update",
                            OsBuildName = "22000.739",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from April 2022 update",
                            OsBuildName = "22000.675",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from March 2022 update",
                            OsBuildName = "22000.613",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from February 2022 update",
                            OsBuildName = "22000.556",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from January 2022 update",
                            OsBuildName = "22000.493",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from December 2021 update",
                            OsBuildName = "22000.434",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from November 2021 update",
                            OsBuildName = "22000.348",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 build from October 2021 update",
                            OsBuildName = "22000.282",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 11 21H2 initial release build from October 2021",
                            OsBuildName = "22000.194",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from December 2024 with latest security updates",
                            OsBuildName = "19045.5247",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from November 2024 update",
                            OsBuildName = "19045.5131",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from October 2024 update",
                            OsBuildName = "19045.5011",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from September 2024 update",
                            OsBuildName = "19045.4894",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from August 2024 update",
                            OsBuildName = "19045.478",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from July 2024 update",
                            OsBuildName = "19045.4651",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from June 2024 update",
                            OsBuildName = "19045.4529",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from May 2024 update",
                            OsBuildName = "19045.4412",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from April 2024 update",
                            OsBuildName = "19045.4291",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from March 2024 update",
                            OsBuildName = "19045.417",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from February 2024 update",
                            OsBuildName = "19045.4046",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from January 2024 update",
                            OsBuildName = "19045.393",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from December 2023 update",
                            OsBuildName = "19045.3803",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from November 2023 update",
                            OsBuildName = "19045.3693",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from October 2023 update",
                            OsBuildName = "19045.357",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from September 2023 update",
                            OsBuildName = "19045.3448",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from August 2023 update",
                            OsBuildName = "19045.3324",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from July 2023 update",
                            OsBuildName = "19045.3208",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from June 2023 update",
                            OsBuildName = "19045.3086",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from May 2023 update",
                            OsBuildName = "19045.2965",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from April 2023 update",
                            OsBuildName = "19045.2846",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from March 2023 update",
                            OsBuildName = "19045.2728",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 101,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from February 2023 update",
                            OsBuildName = "19045.2604",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 102,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from January 2023 update",
                            OsBuildName = "19045.2486",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 103,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from December 2022 update",
                            OsBuildName = "19045.2364",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 104,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from November 2022 update",
                            OsBuildName = "19045.2251",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 105,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 build from October 2022 update",
                            OsBuildName = "19045.213",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 106,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 22H2 initial release build from October 2022",
                            OsBuildName = "19045.2006",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 107,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from August 2022 update",
                            OsBuildName = "19044.1889",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 108,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from July 2022 update",
                            OsBuildName = "19044.1806",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 109,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from June 2022 update",
                            OsBuildName = "19044.1741",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 110,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from May 2022 update",
                            OsBuildName = "19044.1706",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 111,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from April 2022 update",
                            OsBuildName = "19044.1645",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 112,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from March 2022 update",
                            OsBuildName = "19044.162",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 113,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from February 2022 update",
                            OsBuildName = "19044.1566",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 114,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from January 2022 update",
                            OsBuildName = "19044.1503",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 115,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from December 2021 update",
                            OsBuildName = "19044.1415",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 116,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 build from November 2021 update",
                            OsBuildName = "19044.1387",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 117,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H2 initial release build from November 2021",
                            OsBuildName = "19044.1288",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 118,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H1 build from September 2021 update",
                            OsBuildName = "19043.1288",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 119,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H1 build from August 2021 update",
                            OsBuildName = "19043.1237",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 120,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H1 build from July 2021 update",
                            OsBuildName = "19043.1165",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 121,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H1 build from June 2021 update",
                            OsBuildName = "19043.111",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 122,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H1 build from May 2021 update",
                            OsBuildName = "19043.1083",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 123,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 21H1 initial release build from May 2021",
                            OsBuildName = "19043.985",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 124,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from April 2021 update",
                            OsBuildName = "19042.985",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 125,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from March 2021 update",
                            OsBuildName = "19042.928",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 126,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from February 2021 update",
                            OsBuildName = "19042.867",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 127,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from January 2021 update",
                            OsBuildName = "19042.804",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 128,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from December 2020 update",
                            OsBuildName = "19042.746",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 129,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from November 2020 update",
                            OsBuildName = "19042.685",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 130,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 build from October 2020 update",
                            OsBuildName = "19042.63",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 131,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 20H2 initial release build from October 2020",
                            OsBuildName = "19042.608",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 132,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from April 2021 update",
                            OsBuildName = "19041.985",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 133,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from March 2021 update",
                            OsBuildName = "19041.928",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 134,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from February 2021 update",
                            OsBuildName = "19041.867",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 135,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from January 2021 update",
                            OsBuildName = "19041.804",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 136,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from December 2020 update",
                            OsBuildName = "19041.746",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 137,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from November 2020 update",
                            OsBuildName = "19041.685",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 138,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from October 2020 update",
                            OsBuildName = "19041.63",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 139,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from September 2020 update",
                            OsBuildName = "19041.572",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 140,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from August 2020 update",
                            OsBuildName = "19041.508",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 141,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from July 2020 update",
                            OsBuildName = "19041.45",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 142,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from June 2020 update",
                            OsBuildName = "19041.388",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 143,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 build from May 2020 update",
                            OsBuildName = "19041.329",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 144,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 2004 initial release build from May 2020",
                            OsBuildName = "19041.264",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 145,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from December 2020 update",
                            OsBuildName = "18363.1556",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 146,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from November 2020 update",
                            OsBuildName = "18363.15",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 147,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from October 2020 update",
                            OsBuildName = "18363.144",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 148,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from September 2020 update",
                            OsBuildName = "18363.1379",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 149,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from August 2020 update",
                            OsBuildName = "18363.135",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 150,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from July 2020 update",
                            OsBuildName = "18363.1316",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 151,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from June 2020 update",
                            OsBuildName = "18363.1256",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 152,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from May 2020 update",
                            OsBuildName = "18363.1198",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 153,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from April 2020 update",
                            OsBuildName = "18363.1139",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 154,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from March 2020 update",
                            OsBuildName = "18363.1082",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 155,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from February 2020 update",
                            OsBuildName = "18363.1049",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 156,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from January 2020 update",
                            OsBuildName = "18363.959",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 157,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from December 2019 update",
                            OsBuildName = "18363.9",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 158,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 build from November 2019 update",
                            OsBuildName = "18363.836",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 159,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1909 initial release build from November 2019",
                            OsBuildName = "18363.476",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 160,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from December 2020 update",
                            OsBuildName = "18362.1556",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 161,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from November 2020 update",
                            OsBuildName = "18362.15",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 162,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from October 2020 update",
                            OsBuildName = "18362.144",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 163,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from September 2020 update",
                            OsBuildName = "18362.1379",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 164,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from August 2020 update",
                            OsBuildName = "18362.135",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 165,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from July 2020 update",
                            OsBuildName = "18362.1316",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 166,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from June 2020 update",
                            OsBuildName = "18362.1256",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 167,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from May 2020 update",
                            OsBuildName = "18362.1198",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 168,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from April 2020 update",
                            OsBuildName = "18362.1139",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 169,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from March 2020 update",
                            OsBuildName = "18362.1082",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 170,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from February 2020 update",
                            OsBuildName = "18362.1049",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 171,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from January 2020 update",
                            OsBuildName = "18362.959",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 172,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from December 2019 update",
                            OsBuildName = "18362.9",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 173,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from November 2019 update",
                            OsBuildName = "18362.836",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 174,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from October 2019 update",
                            OsBuildName = "18362.778",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 175,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from September 2019 update",
                            OsBuildName = "18362.72",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 176,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from August 2019 update",
                            OsBuildName = "18362.657",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 177,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from July 2019 update",
                            OsBuildName = "18362.592",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 178,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from June 2019 update",
                            OsBuildName = "18362.535",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 179,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 build from May 2019 update",
                            OsBuildName = "18362.418",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 180,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1903 initial release build from May 2019",
                            OsBuildName = "18362.356",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 181,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from May 2024 final update",
                            OsBuildName = "17763.5696",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 182,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from April 2024 update",
                            OsBuildName = "17763.5576",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 183,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from March 2024 update",
                            OsBuildName = "17763.5458",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 184,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from February 2024 update",
                            OsBuildName = "17763.5329",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 185,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from January 2024 update",
                            OsBuildName = "17763.5206",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 186,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from December 2023 update",
                            OsBuildName = "17763.5122",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 187,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from November 2023 update",
                            OsBuildName = "17763.5011",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 188,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from October 2023 update",
                            OsBuildName = "17763.4974",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 189,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from September 2023 update",
                            OsBuildName = "17763.4851",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 190,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from August 2023 update",
                            OsBuildName = "17763.4737",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 191,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from July 2023 update",
                            OsBuildName = "17763.4645",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 192,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from June 2023 update",
                            OsBuildName = "17763.4547",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 193,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from May 2023 update",
                            OsBuildName = "17763.4499",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 194,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from April 2023 update",
                            OsBuildName = "17763.4377",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 195,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from March 2023 update",
                            OsBuildName = "17763.4252",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 196,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from March 2020 update",
                            OsBuildName = "17763.1039",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 197,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from December 2019 update",
                            OsBuildName = "17763.914",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 198,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from November 2019 update",
                            OsBuildName = "17763.864",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 199,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from October 2019 update",
                            OsBuildName = "17763.805",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 200,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from September 2019 update",
                            OsBuildName = "17763.737",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 201,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from August 2019 update",
                            OsBuildName = "17763.678",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 202,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from July 2019 update",
                            OsBuildName = "17763.615",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 203,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from June 2019 update",
                            OsBuildName = "17763.557",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 204,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from May 2019 update",
                            OsBuildName = "17763.529",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 205,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from April 2019 update",
                            OsBuildName = "17763.475",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 206,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from March 2019 update",
                            OsBuildName = "17763.437",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 207,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from February 2019 update",
                            OsBuildName = "17763.379",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 208,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from January 2019 update",
                            OsBuildName = "17763.316",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 209,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from December 2018 update",
                            OsBuildName = "17763.253",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 210,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 build from November 2018 update",
                            OsBuildName = "17763.168",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 211,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1809 initial release build from November 2018",
                            OsBuildName = "17763.107",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 212,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1803 initial release build from April 2018",
                            OsBuildName = "17134.1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 213,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1709 initial release build from October 2017",
                            OsBuildName = "16299.15",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 214,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1703 initial release build from April 2017",
                            OsBuildName = "15063",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 215,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1607 initial release build from August 2016",
                            OsBuildName = "14393.1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 216,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1511 initial release build from November 2015",
                            OsBuildName = "10586",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 217,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 10 1507 initial release build from July 2015",
                            OsBuildName = "10240.16384",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 218,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 8.1 Update initial build from April 2014",
                            OsBuildName = "9600.17415",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 219,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 8 initial release build from October 2012",
                            OsBuildName = "9200.16384",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 220,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 7 SP1 initial release build from February 2011",
                            OsBuildName = "7601.17514",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 221,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows 7 RTM initial release build from October 2009",
                            OsBuildName = "7600.16385",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 222,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Vista SP2 initial release build from April 2009",
                            OsBuildName = "6002.18005",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 223,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Vista SP1 initial release build from February 2008",
                            OsBuildName = "6001.18",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 224,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Vista RTM initial release build from November 2006",
                            OsBuildName = "6000.16386",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 225,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows XP SP3 initial release build from April 2008",
                            OsBuildName = "2600.5512",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 226,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows XP RTM initial release build from August 2001",
                            OsBuildName = "2600",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 227,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2022 build from December 2024 with latest updates",
                            OsBuildName = "20348.2762",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 228,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2022 initial release build from August 2021",
                            OsBuildName = "20348.169",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 229,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2019 build from November 2024 update",
                            OsBuildName = "17763.6532",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 230,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2019 initial release build from October 2018",
                            OsBuildName = "17763.1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 231,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2016 build from October 2024 update",
                            OsBuildName = "14393.7428",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 232,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2016 initial release build from October 2016",
                            OsBuildName = "14393",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 233,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2012 R2 build from July 2023 final update",
                            OsBuildName = "9600.21758",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 234,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2012 build from January 2023 final update",
                            OsBuildName = "9200.23594",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 235,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2008 R2 SP1 build from December 2023 final update",
                            OsBuildName = "7601.26706",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 236,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Windows Server 2003 RTM initial release build from April 2003",
                            OsBuildName = "3790",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 237,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Sequoia 15.1 build from October 2024",
                            OsBuildName = "24B83",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 238,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Sequoia 15.0 initial release build from September 2024",
                            OsBuildName = "24A335",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 239,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Sonoma 14.6.1 build from August 2024",
                            OsBuildName = "23G93",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 240,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Sonoma 14.0 initial release build from September 2023",
                            OsBuildName = "23A344",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 241,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Ventura 13.6 build from September 2023",
                            OsBuildName = "22G91",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 242,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Ventura 13.0 initial release build from October 2022",
                            OsBuildName = "22A380",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 243,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Monterey 12.7.6 build from July 2024",
                            OsBuildName = "21G816",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 244,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Monterey 12.0.1 initial release build from October 2021",
                            OsBuildName = "21A559",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 245,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Big Sur 11.7.10 build from September 2023",
                            OsBuildName = "20G918",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 246,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Big Sur 11.0.1 initial release build from November 2020",
                            OsBuildName = "20A2411",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 247,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Catalina 10.15.7 build from November 2021",
                            OsBuildName = "19H2026",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 248,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Catalina 10.15 initial release build from October 2019",
                            OsBuildName = "19A583",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 249,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Mojave 10.14.6 build from November 2021",
                            OsBuildName = "18G9323",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 250,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS Mojave 10.14 initial release build from September 2018",
                            OsBuildName = "18A391",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 251,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS High Sierra 10.13.6 build from November 2020",
                            OsBuildName = "17G14042",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 252,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "macOS High Sierra 10.13 initial release build from September 2017",
                            OsBuildName = "17A405",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 253,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Debian 12 Bookworm stable kernel build",
                            OsBuildName = "6.11.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 254,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Debian 11 Bullseye stable kernel build",
                            OsBuildName = "6.1.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 255,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Debian 10 Buster stable kernel build",
                            OsBuildName = "5.10.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 256,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Ubuntu 24.04 LTS Noble Numbat kernel build",
                            OsBuildName = "6.8.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 257,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Ubuntu 22.04 LTS Jammy Jellyfish kernel build",
                            OsBuildName = "6.5.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 258,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Ubuntu 20.04 LTS Focal Fossa kernel build",
                            OsBuildName = "5.15.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 259,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Ubuntu 18.04 LTS Bionic Beaver kernel build",
                            OsBuildName = "5.4.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 260,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "RHEL 9 initial release kernel build",
                            OsBuildName = "5.14.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 261,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "RHEL 8 initial release kernel build",
                            OsBuildName = "4.18.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 262,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "RHEL 7 initial release kernel build",
                            OsBuildName = "3.10.0-1",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 263,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Fedora 40 kernel build",
                            OsBuildName = "6.9.0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 264,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Fedora 39 kernel build",
                            OsBuildName = "6.8.0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 265,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "FreeBSD 14.0-RELEASE build",
                            OsBuildName = "14.0-0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 266,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "FreeBSD 13.2-RELEASE build",
                            OsBuildName = "13.2-0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 267,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "OpenBSD 7.4-RELEASE build",
                            OsBuildName = "7.4-0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 268,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "OpenBSD 7.3-RELEASE build",
                            OsBuildName = "7.3-0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 269,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "NetBSD 10.0-RELEASE build",
                            OsBuildName = "10.0-0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 270,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "NetBSD 9.3-RELEASE build",
                            OsBuildName = "9.3-0",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 271,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Android 14 API Level 34 build",
                            OsBuildName = "34",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 272,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Android 13 API Level 33 build",
                            OsBuildName = "33",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 273,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Android 12 API Level 31 build",
                            OsBuildName = "31",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 274,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Android 11 API Level 30 build",
                            OsBuildName = "30",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 275,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "Android 10 API Level 29 build",
                            OsBuildName = "29",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 276,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "iOS 18.0 initial release build",
                            OsBuildName = "22A3354",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 277,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "iOS 17.0 initial release build",
                            OsBuildName = "21A331",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 278,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "iOS 16.0 initial release build",
                            OsBuildName = "20A362",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 279,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "iOS 15.0 initial release build",
                            OsBuildName = "19A346",
                            Version = 1
                        },
                        new
                        {
                            OsBuildId = 280,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsBuildDescription = "iOS 14.0 initial release build",
                            OsBuildName = "18A373",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.OsEdition", b =>
                {
                    b.Property<int>("OsEditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("os_edition_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsEditionId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("OsEditionDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("os_edition_description");

                    b.Property<string>("OsEditionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("os_edition_name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("OsEditionId");

                    b.HasIndex("OsEditionName")
                        .IsUnique()
                        .HasDatabaseName("UX_os_edition_name");

                    b.ToTable("os_edition");

                    b.HasData(
                        new
                        {
                            OsEditionId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Consumer-focused edition with basic features for personal and household use",
                            OsEditionName = "Home",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Business-oriented edition with advanced features for professionals and small businesses",
                            OsEditionName = "Professional",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Full-featured edition designed for large organizations with advanced management and security capabilities",
                            OsEditionName = "Enterprise",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Premium edition with all available features and capabilities; highest tier consumer offering",
                            OsEditionName = "Ultimate",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Entry-level edition with limited features for budget-conscious users or emerging markets",
                            OsEditionName = "Starter",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Mid-tier edition balancing features and cost for general business use",
                            OsEditionName = "Standard",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "High-end server edition optimized for large-scale virtualization and cloud infrastructure",
                            OsEditionName = "Datacenter",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "High-performance edition optimized for content creation technical computing and advanced workloads",
                            OsEditionName = "Workstation",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Special edition for academic institutions students and educators with educational licensing",
                            OsEditionName = "Education",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "General server edition for hosting services applications and network infrastructure",
                            OsEditionName = "Server",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Standard desktop edition for workstation and personal computer use",
                            OsEditionName = "Desktop",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Minimal installation edition without GUI for reduced resource usage and attack surface",
                            OsEditionName = "Core",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Free community-supported edition typically for non-commercial use",
                            OsEditionName = "Community",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition with development tools and features for software developers and programmers",
                            OsEditionName = "Developer",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Long Term Support edition with extended support lifecycle and stability focus",
                            OsEditionName = "LTS",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Internet of Things edition optimized for embedded devices and edge computing",
                            OsEditionName = "IoT",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Specialized edition for embedded systems industrial automation and dedicated appliances",
                            OsEditionName = "Embedded",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition designed for smartphones tablets and mobile computing devices",
                            OsEditionName = "Mobile",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Minimal server installation without graphical interface for improved security and performance",
                            OsEditionName = "Server Core",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Server edition optimized specifically for web hosting and internet-facing applications",
                            OsEditionName = "Web",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Specialized edition optimized for file servers and storage area networks",
                            OsEditionName = "Storage",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "High Performance Computing edition for scientific computing and computational clusters",
                            OsEditionName = "HPC",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Enhanced professional edition with support for high-end hardware and advanced computing",
                            OsEditionName = "Pro for Workstations",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition tailored for small business environments with simplified management features",
                            OsEditionName = "Small Business",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Enhanced consumer edition with additional features beyond standard offering",
                            OsEditionName = "Premium",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Simplified edition with core functionality for basic computing needs",
                            OsEditionName = "Basic",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Time-limited trial edition for testing and evaluation purposes before purchase",
                            OsEditionName = "Evaluation",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Original Equipment Manufacturer edition pre-installed on hardware by manufacturers",
                            OsEditionName = "OEM",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Full retail edition sold through commercial channels with transferable licensing",
                            OsEditionName = "Retail",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition for organizations purchasing multiple licenses with centralized management",
                            OsEditionName = "Volume License",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition optimized for cloud deployment and multi-tenant environments",
                            OsEditionName = "Cloud",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Server edition focused on virtualization and hypervisor functionality",
                            OsEditionName = "Hyper-V",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Small business server edition with user/device limitations and simplified management",
                            OsEditionName = "Essentials",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Entry-level server edition with hardware limitations for small businesses",
                            OsEditionName = "Foundation",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition compiled for ARM processor architecture for mobile and embedded devices",
                            OsEditionName = "ARM",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Stripped-down installation with only essential components for specialized deployments",
                            OsEditionName = "Minimal",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Bootable edition that runs from external media without installation for testing or recovery",
                            OsEditionName = "Live",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Specialized edition for system recovery troubleshooting and data rescue operations",
                            OsEditionName = "Rescue",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Lightweight edition optimized for thin client devices and virtual desktop infrastructure",
                            OsEditionName = "Thin Client",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Optimized edition for containerized applications and microservices architectures",
                            OsEditionName = "Container",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Special licensing edition for educational institutions with volume discounts",
                            OsEditionName = "Academic",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Not For Resale edition provided to partners vendors or for demonstration purposes",
                            OsEditionName = "NFR",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Pre-release edition for testing new features before general availability",
                            OsEditionName = "Beta",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Early access edition showcasing upcoming features for feedback and evaluation",
                            OsEditionName = "Preview",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Continuous update edition for early adopters testing cutting-edge features",
                            OsEditionName = "Insider",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Production-ready edition with thoroughly tested features and long-term stability",
                            OsEditionName = "Stable",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition containing features undergoing validation before stable release",
                            OsEditionName = "Testing",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Bleeding-edge edition with latest untested features for developers and testers",
                            OsEditionName = "Unstable",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Continuously updated edition without distinct version releases",
                            OsEditionName = "Rolling Release",
                            Version = 1
                        },
                        new
                        {
                            OsEditionId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsEditionDescription = "Edition receiving extended security updates beyond standard support lifecycle",
                            OsEditionName = "Extended Security",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.OsPlatform", b =>
                {
                    b.Property<int>("OsPlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("os_platform_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsPlatformId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("OsPlatformDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("os_platform_description")
                        .HasComment("Description of the platform and its primary use cases");

                    b.Property<string>("OsPlatformName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("os_platform_name")
                        .HasComment("Name of the operating system platform or family");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("OsPlatformId")
                        .HasName("PK_os_platform");

                    b.HasIndex("OsPlatformName")
                        .IsUnique()
                        .HasDatabaseName("IX_os_platform_name");

                    b.ToTable("os_platform", null, t =>
                        {
                            t.HasComment("Operating system platforms and families for software categorization");
                        });

                    b.HasData(
                        new
                        {
                            OsPlatformId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Microsoft's desktop and server operating system platform for personal computers and enterprise environments",
                            OsPlatformName = "Windows",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Apple's Unix-based operating system platform for Macintosh desktop and laptop computers",
                            OsPlatformName = "macOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Open-source Unix-like operating system kernel with various distributions for servers desktops and embedded systems",
                            OsPlatformName = "Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Family of multitasking multiuser operating systems derived from original AT&T Unix",
                            OsPlatformName = "Unix",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Google's Linux-based mobile operating system platform for smartphones tablets and embedded devices",
                            OsPlatformName = "Android",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Apple's mobile operating system platform for iPhone devices",
                            OsPlatformName = "iOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Apple's tablet operating system platform derived from iOS specifically for iPad devices",
                            OsPlatformName = "iPadOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Google's Linux-based operating system platform for Chromebook laptops and cloud-centric computing",
                            OsPlatformName = "Chrome OS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Unix-like operating system platform derived from Berkeley Software Distribution focused on performance",
                            OsPlatformName = "FreeBSD",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Unix-like operating system platform emphasizing security code correctness and cryptography",
                            OsPlatformName = "OpenBSD",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Unix-like operating system platform emphasizing portability across diverse hardware architectures",
                            OsPlatformName = "NetBSD",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Oracle's Unix operating system platform for enterprise servers and workstations",
                            OsPlatformName = "Solaris",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "IBM's Unix operating system platform for Power Systems and enterprise servers",
                            OsPlatformName = "AIX",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Hewlett Packard Enterprise's Unix operating system platform for Integrity and PA-RISC servers",
                            OsPlatformName = "HP-UX",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "IBM's mainframe operating system platform for System z and zSeries mainframe computers",
                            OsPlatformName = "z/OS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Apple's operating system platform for Apple Watch wearable devices",
                            OsPlatformName = "watchOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Apple's operating system platform for Apple TV set-top boxes and streaming devices",
                            OsPlatformName = "tvOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Huawei's distributed operating system platform for mobile devices IoT and smart devices",
                            OsPlatformName = "HarmonyOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Linux-based operating system platform for smart TVs wearables and IoT devices developed by Samsung and partners",
                            OsPlatformName = "Tizen",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Wind River's real-time operating system platform for embedded systems and mission-critical applications",
                            OsPlatformName = "VxWorks",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "BlackBerry's Unix-like real-time operating system platform for automotive and embedded systems",
                            OsPlatformName = "QNX",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Juniper Networks' FreeBSD-based operating system platform for networking equipment",
                            OsPlatformName = "Junos",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Cisco's internetwork operating system platform for networking routers and switches",
                            OsPlatformName = "Cisco IOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "VMware's bare-metal hypervisor platform for server virtualization and cloud infrastructure",
                            OsPlatformName = "ESXi",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Open-source virtualization platform based on Debian Linux for running VMs and containers",
                            OsPlatformName = "Proxmox VE",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Citrix's hypervisor platform for server virtualization and cloud computing",
                            OsPlatformName = "XenServer",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "MikroTik's operating system platform for routers switches and wireless systems",
                            OsPlatformName = "RouterOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Open-source firewall and router operating system platform based on FreeBSD",
                            OsPlatformName = "pfSense",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Linux-based operating system platform for embedded devices and consumer routers",
                            OsPlatformName = "OpenWrt",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Open-source storage operating system platform based on FreeBSD for network-attached storage",
                            OsPlatformName = "TrueNAS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Synology's DiskStation Manager operating system platform for NAS devices",
                            OsPlatformName = "DSM",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "QNAP's operating system platform for NAS and storage devices",
                            OsPlatformName = "QTS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Microsoft's server operating system platform for enterprise datacenter and cloud environments",
                            OsPlatformName = "Windows Server",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Enterprise-grade Linux platform for servers cloud and containerized applications",
                            OsPlatformName = "Red Hat Enterprise Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Debian-based Linux platform for desktops servers and cloud computing",
                            OsPlatformName = "Ubuntu",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Community-driven enterprise Linux platform compatible with Red Hat Enterprise Linux",
                            OsPlatformName = "CentOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Community-maintained Linux platform known for stability and free software principles",
                            OsPlatformName = "Debian",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Community-driven Linux platform featuring cutting-edge open-source technologies",
                            OsPlatformName = "Fedora",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Enterprise Linux platform for mission-critical workloads and SAP applications",
                            OsPlatformName = "SUSE Linux Enterprise",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Enterprise Linux platform optimized for Oracle software and database systems",
                            OsPlatformName = "Oracle Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "AWS-optimized Linux platform designed for cloud computing on Amazon infrastructure",
                            OsPlatformName = "Amazon Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Community enterprise Linux platform providing downstream RHEL compatibility",
                            OsPlatformName = "Rocky Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Community-owned enterprise Linux platform offering RHEL binary compatibility",
                            OsPlatformName = "AlmaLinux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Rolling-release Linux platform emphasizing simplicity and user control",
                            OsPlatformName = "Arch Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Debian-based Linux platform specialized for penetration testing and security auditing",
                            OsPlatformName = "Kali Linux",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Source-based Linux platform offering extreme customization and optimization",
                            OsPlatformName = "Gentoo",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "One of oldest Linux platforms emphasizing simplicity and stability",
                            OsPlatformName = "Slackware",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Microsoft's discontinued disk operating system platform for early personal computers",
                            OsPlatformName = "MS-DOS",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "IBM's discontinued operating system platform originally developed with Microsoft",
                            OsPlatformName = "OS/2",
                            Version = 1
                        },
                        new
                        {
                            OsPlatformId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(7659), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsPlatformDescription = "Discontinued multimedia operating system platform known for performance; spiritual successor is Haiku",
                            OsPlatformName = "BeOS",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.OsVendor", b =>
                {
                    b.Property<int>("OsVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("os_vendor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsVendorId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("OsVendorDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("os_vendor_description")
                        .HasComment("Description of vendor's primary operating systems and focus areas");

                    b.Property<string>("OsVendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("os_vendor_name")
                        .HasComment("Name of the operating system vendor or maintainer");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("OsVendorId")
                        .HasName("PK_os_vendor");

                    b.HasIndex("OsVendorName")
                        .IsUnique()
                        .HasDatabaseName("IX_os_vendor_name");

                    b.ToTable("os_vendor", null, t =>
                        {
                            t.HasComment("Operating system vendors and maintainers for software asset categorization");
                        });

                    b.HasData(
                        new
                        {
                            OsVendorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Windows operating systems for desktops servers and enterprise environments",
                            OsVendorName = "Microsoft",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops macOS iOS iPadOS watchOS and tvOS for consumer and enterprise devices",
                            OsVendorName = "Apple",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Android mobile OS and Chrome OS for Chromebooks and cloud-based computing",
                            OsVendorName = "Google",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Commercial sponsor of Ubuntu Linux distribution and provider of enterprise support services",
                            OsVendorName = "Canonical",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Enterprise Linux vendor providing RHEL and related open-source solutions; owned by IBM",
                            OsVendorName = "Red Hat",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "European enterprise Linux vendor providing SUSE Linux Enterprise Server and Desktop",
                            OsVendorName = "SUSE",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Oracle Linux Oracle Solaris and enterprise database systems",
                            OsVendorName = "Oracle",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops AIX for Power Systems and z/OS for mainframe systems",
                            OsVendorName = "IBM",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops HP-UX Unix operating system for Integrity and PA-RISC servers",
                            OsVendorName = "Hewlett Packard Enterprise",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community-driven organization maintaining Debian GNU/Linux distribution",
                            OsVendorName = "Debian Project",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community-driven Linux distribution sponsored by Red Hat",
                            OsVendorName = "Fedora Project",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Non-profit organization supporting Linux kernel development and related open-source projects",
                            OsVendorName = "Linux Foundation",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Non-profit supporting FreeBSD Unix-like operating system development",
                            OsVendorName = "FreeBSD Foundation",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops OpenBSD focused on security and code correctness",
                            OsVendorName = "OpenBSD Project",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops NetBSD emphasizing portability across hardware platforms",
                            OsVendorName = "NetBSD Foundation",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community-maintained rolling-release Linux distribution",
                            OsVendorName = "Arch Linux",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Maintains Gentoo Linux source-based distribution",
                            OsVendorName = "Gentoo Foundation",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "One of oldest Linux distributions maintained by Patrick Volkerding",
                            OsVendorName = "Slackware Linux",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Offensive Security maintains Kali Linux for penetration testing and security auditing",
                            OsVendorName = "Kali Linux",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community Enterprise OS based on RHEL sources; now CentOS Stream maintained by Red Hat",
                            OsVendorName = "CentOS Project",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community enterprise Linux distribution created as CentOS replacement",
                            OsVendorName = "Rocky Linux",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community-owned enterprise Linux distribution forked from RHEL",
                            OsVendorName = "AlmaLinux",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops ESXi hypervisor and related virtualization operating systems; owned by Broadcom",
                            OsVendorName = "VMware",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops XenServer hypervisor and virtualization platforms",
                            OsVendorName = "Citrix",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Amazon Linux optimized for AWS cloud infrastructure",
                            OsVendorName = "Amazon Web Services",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops HarmonyOS for mobile devices and IoT ecosystems",
                            OsVendorName = "Huawei",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Tizen OS for smart TVs wearables and IoT devices",
                            OsVendorName = "Samsung",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops VxWorks real-time operating system for embedded systems; owned by Aptiv",
                            OsVendorName = "Wind River",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops QNX real-time operating system for automotive and embedded systems; owned by BlackBerry",
                            OsVendorName = "QNX Software Systems",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Junos OS for networking equipment and routers",
                            OsVendorName = "Juniper Networks",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops IOS and IOS-XE operating systems for networking infrastructure",
                            OsVendorName = "Cisco Systems",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops EOS network operating system for data center switches",
                            OsVendorName = "Arista Networks",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops RouterOS for networking equipment and routers",
                            OsVendorName = "MikroTik",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops UniFi OS and EdgeOS for networking and IoT devices",
                            OsVendorName = "Ubiquiti",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops Proxmox VE virtualization platform based on Debian",
                            OsVendorName = "Proxmox Server Solutions",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "iXsystems develops TrueNAS storage operating system based on FreeBSD",
                            OsVendorName = "TrueNAS",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Netgate develops pfSense firewall and router operating system based on FreeBSD",
                            OsVendorName = "pfSense",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Community-developed Linux-based OS for embedded devices and routers",
                            OsVendorName = "OpenWrt Project",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops DiskStation Manager (DSM) for NAS devices",
                            OsVendorName = "Synology",
                            Version = 1
                        },
                        new
                        {
                            OsVendorId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 900, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            OsVendorDescription = "Develops QTS and QuTS operating systems for NAS and storage devices",
                            OsVendorName = "QNAP",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.OsVersion", b =>
                {
                    b.Property<int>("OsVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("os_version_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsVersionId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("OsVersionDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("os_version_description");

                    b.Property<string>("OsVersionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("os_version_name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("OsVersionId");

                    b.HasIndex("OsVersionName")
                        .IsUnique()
                        .HasDatabaseName("UX_os_version_name");

                    b.ToTable("os_version");

                    b.HasData(
                        new
                        {
                            OsVersionId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Latest consumer and business Windows version released in 2021 with redesigned interface",
                            OsVersionName = "Windows 11",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Long-term Windows version released in 2015 with continuous updates and widespread adoption",
                            OsVersionName = "Windows 10",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Updated version of Windows 8 released in 2013 with improved Start menu functionality",
                            OsVersionName = "Windows 8.1",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Windows version released in 2012 featuring Metro UI and touch-focused design",
                            OsVersionName = "Windows 8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Popular Windows version released in 2009 known for stability and performance",
                            OsVersionName = "Windows 7",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Windows version released in 2006 introducing Aero interface and enhanced security",
                            OsVersionName = "Windows Vista",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Highly successful Windows version released in 2001 with extended support lifecycle",
                            OsVersionName = "Windows XP",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Business-focused Windows NT version released in 2000 for professional workstations",
                            OsVersionName = "Windows 2000",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Consumer Windows version released in 2000 as successor to Windows 98",
                            OsVersionName = "Windows ME",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Consumer Windows version released in 1998 with improved USB and internet support",
                            OsVersionName = "Windows 98",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Revolutionary Windows version released in 1995 introducing Start menu and taskbar",
                            OsVersionName = "Windows 95",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Business Windows version released in 1996 based on NT kernel architecture",
                            OsVersionName = "Windows NT 4.0",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Early graphical Windows version released in 1992 running on MS-DOS",
                            OsVersionName = "Windows 3.1",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Latest Windows Server version released in 2021 for datacenter and hybrid cloud",
                            OsVersionName = "Windows Server 2022",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Windows Server version released in 2018 with enhanced hybrid cloud capabilities",
                            OsVersionName = "Windows Server 2019",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Windows Server version released in 2016 introducing containers and nano server",
                            OsVersionName = "Windows Server 2016",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Updated server version released in 2013 with cloud and virtualization enhancements",
                            OsVersionName = "Windows Server 2012 R2",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Windows Server version released in 2012 with Hyper-V improvements",
                            OsVersionName = "Windows Server 2012",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Server version released in 2009 exclusively for 64-bit systems",
                            OsVersionName = "Windows Server 2008 R2",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Server version released in 2008 based on Windows Vista codebase",
                            OsVersionName = "Windows Server 2008",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Server version released in 2003 replacing Windows 2000 Server",
                            OsVersionName = "Windows Server 2003",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version 15 released in 2024 with AI and continuity features",
                            OsVersionName = "macOS Sequoia 15",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version 14 released in 2023 with widget enhancements and video conferencing features",
                            OsVersionName = "macOS Sonoma 14",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version 13 released in 2022 with Stage Manager and Continuity Camera",
                            OsVersionName = "macOS Ventura 13",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version 12 released in 2021 with Universal Control and SharePlay",
                            OsVersionName = "macOS Monterey 12",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version 11 released in 2020 with redesigned interface and Apple Silicon support",
                            OsVersionName = "macOS Big Sur 11",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version released in 2019 replacing iTunes with separate apps",
                            OsVersionName = "macOS Catalina 10.15",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version released in 2018 introducing Dark Mode and Stacks",
                            OsVersionName = "macOS Mojave 10.14",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version released in 2017 with APFS file system",
                            OsVersionName = "macOS High Sierra 10.13",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "macOS version released in 2016 introducing Siri to Mac",
                            OsVersionName = "macOS Sierra 10.12",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2015 focused on performance improvements",
                            OsVersionName = "OS X El Capitan 10.11",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2014 with iOS-inspired flat design",
                            OsVersionName = "OS X Yosemite 10.10",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2013 introducing Maps and iBooks",
                            OsVersionName = "OS X Mavericks 10.9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2012 with iCloud integration",
                            OsVersionName = "OS X Mountain Lion 10.8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2011 introducing Mission Control and Launchpad",
                            OsVersionName = "Mac OS X Lion 10.7",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2009 focused on refinement and performance",
                            OsVersionName = "Mac OS X Snow Leopard 10.6",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OS X version released in 2007 with Time Machine backup feature",
                            OsVersionName = "Mac OS X Leopard 10.5",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu Long Term Support release from April 2024 with 5-year support",
                            OsVersionName = "Ubuntu 24.04 LTS",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu Long Term Support release from April 2022 codenamed Jammy Jellyfish",
                            OsVersionName = "Ubuntu 22.04 LTS",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu Long Term Support release from April 2020 codenamed Focal Fossa",
                            OsVersionName = "Ubuntu 20.04 LTS",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu Long Term Support release from April 2018 codenamed Bionic Beaver",
                            OsVersionName = "Ubuntu 18.04 LTS",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu Long Term Support release from April 2016 codenamed Xenial Xerus",
                            OsVersionName = "Ubuntu 16.04 LTS",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Debian stable release codenamed Bookworm released in 2023",
                            OsVersionName = "Debian 12",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Debian stable release codenamed Bullseye released in 2021",
                            OsVersionName = "Debian 11",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Debian stable release codenamed Buster released in 2019",
                            OsVersionName = "Debian 10",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Debian stable release codenamed Stretch released in 2017",
                            OsVersionName = "Debian 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Red Hat Enterprise Linux 9 released in 2022 with 10-year lifecycle",
                            OsVersionName = "RHEL 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Red Hat Enterprise Linux 8 released in 2019 with modular repository support",
                            OsVersionName = "RHEL 8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Red Hat Enterprise Linux 7 released in 2014 with systemd and Docker support",
                            OsVersionName = "RHEL 7",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Red Hat Enterprise Linux 6 released in 2010 with KVM virtualization",
                            OsVersionName = "RHEL 6",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Rolling preview of next RHEL 9 minor release",
                            OsVersionName = "CentOS Stream 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Rolling preview of next RHEL 8 minor release",
                            OsVersionName = "CentOS Stream 8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Community rebuild of RHEL 7 released in 2014",
                            OsVersionName = "CentOS 7",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Community rebuild of RHEL 6 released in 2010",
                            OsVersionName = "CentOS 6",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Enterprise Linux 9 compatible with RHEL 9",
                            OsVersionName = "Rocky Linux 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Enterprise Linux 8 compatible with RHEL 8",
                            OsVersionName = "Rocky Linux 8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Community-owned enterprise Linux 9 compatible with RHEL 9",
                            OsVersionName = "AlmaLinux 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Community-owned enterprise Linux 8 compatible with RHEL 8",
                            OsVersionName = "AlmaLinux 8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Community Linux distribution released in 2024 with cutting-edge features",
                            OsVersionName = "Fedora 40",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Community Linux distribution released in 2023",
                            OsVersionName = "Fedora 39",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Enterprise Linux version 15 with extended lifecycle support",
                            OsVersionName = "SUSE Linux Enterprise 15",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Enterprise Linux version 12 for mission-critical workloads",
                            OsVersionName = "SUSE Linux Enterprise 12",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Stable openSUSE version aligned with SUSE Linux Enterprise",
                            OsVersionName = "openSUSE Leap 15",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Rolling release openSUSE distribution with latest packages",
                            OsVersionName = "openSUSE Tumbleweed",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Enterprise Linux 9 compatible with RHEL and optimized for Oracle products",
                            OsVersionName = "Oracle Linux 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Enterprise Linux 8 with Unbreakable Enterprise Kernel",
                            OsVersionName = "Oracle Linux 8",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Rolling release distribution with latest software versions",
                            OsVersionName = "Arch Linux",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "User-friendly Arch-based distribution with curated rolling releases",
                            OsVersionName = "Manjaro",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu-based distribution with Cinnamon desktop released in 2022",
                            OsVersionName = "Linux Mint 21",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Ubuntu-based distribution released in 2020",
                            OsVersionName = "Linux Mint 20",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Penetration testing distribution updated in 2024",
                            OsVersionName = "Kali Linux 2024",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Penetration testing distribution updated in 2023",
                            OsVersionName = "Kali Linux 2023",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Source-based rolling release distribution",
                            OsVersionName = "Gentoo",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Stable release of one of oldest Linux distributions",
                            OsVersionName = "Slackware 15",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Android mobile OS version released in 2023 with privacy enhancements",
                            OsVersionName = "Android 14",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Android mobile OS version released in 2022",
                            OsVersionName = "Android 13",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Android mobile OS version released in 2021 with Material You design",
                            OsVersionName = "Android 12",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Android mobile OS version released in 2020",
                            OsVersionName = "Android 11",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Android mobile OS version released in 2019",
                            OsVersionName = "Android 10",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Apple mobile OS version released in 2024",
                            OsVersionName = "iOS 18",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Apple mobile OS version released in 2023 with Contact Poster and StandBy",
                            OsVersionName = "iOS 17",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Apple mobile OS version released in 2022 with customizable Lock Screen",
                            OsVersionName = "iOS 16",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Apple mobile OS version released in 2021 with Focus modes",
                            OsVersionName = "iOS 15",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Apple mobile OS version released in 2020 with widgets and App Library",
                            OsVersionName = "iOS 14",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "iPad-specific OS version released in 2024",
                            OsVersionName = "iPadOS 18",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "iPad-specific OS version released in 2023",
                            OsVersionName = "iPadOS 17",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "FreeBSD version 14 released in 2023 with performance improvements",
                            OsVersionName = "FreeBSD 14",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "FreeBSD version 13 released in 2021 with ZFS enhancements",
                            OsVersionName = "FreeBSD 13",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "FreeBSD version 12 released in 2018",
                            OsVersionName = "FreeBSD 12",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OpenBSD version 7.4 released in 2023 with security enhancements",
                            OsVersionName = "OpenBSD 7.4",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "OpenBSD version 7.3 released in 2023",
                            OsVersionName = "OpenBSD 7.3",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "NetBSD version 10 with improved hardware support",
                            OsVersionName = "NetBSD 10",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "NetBSD version 9 released in 2020",
                            OsVersionName = "NetBSD 9",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Oracle Solaris 11 with ZFS and DTrace integration",
                            OsVersionName = "Solaris 11",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Oracle Solaris 10 with Zones virtualization",
                            OsVersionName = "Solaris 10",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "IBM AIX version 7.3 for Power Systems",
                            OsVersionName = "AIX 7.3",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "IBM AIX version 7.2 released in 2015",
                            OsVersionName = "AIX 7.2",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "HP-UX version 11i v3 for Integrity servers",
                            OsVersionName = "HP-UX 11i v3",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Chrome OS version 120 released in 2024",
                            OsVersionName = "Chrome OS 120",
                            Version = 1
                        },
                        new
                        {
                            OsVersionId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            OsVersionDescription = "Chrome OS version 119 released in 2023",
                            OsVersionName = "Chrome OS 119",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.PhysicalMemoryType", b =>
                {
                    b.Property<int>("PhysicalMemtypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("physical_memtype_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhysicalMemtypeId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("PhysicalMemtypeDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("physical_memtype_description")
                        .HasComment("Technical description and specifications of the memory type");

                    b.Property<string>("PhysicalMemtypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("physical_memtype_name")
                        .HasComment("Name or designation of the memory type");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("PhysicalMemtypeId")
                        .HasName("PK_physical_memory_type");

                    b.HasIndex("PhysicalMemtypeName")
                        .IsUnique()
                        .HasDatabaseName("IX_physical_memory_type_name");

                    b.ToTable("physical_memory_type", null, t =>
                        {
                            t.HasComment("Physical memory types and technologies for hardware specifications");
                        });

                    b.HasData(
                        new
                        {
                            PhysicalMemtypeId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate SDRAM - First generation DDR memory",
                            PhysicalMemtypeName = "DDR",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 2 SDRAM - Improved speed and efficiency over DDR",
                            PhysicalMemtypeName = "DDR2",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 3 SDRAM - Standard desktop/server RAM 2007-2015",
                            PhysicalMemtypeName = "DDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 4 SDRAM - Current standard desktop/server RAM",
                            PhysicalMemtypeName = "DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Double Data Rate 5 SDRAM - Latest generation high-speed RAM",
                            PhysicalMemtypeName = "DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Small Outline DDR3 module for laptops and compact systems",
                            PhysicalMemtypeName = "DDR3 SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Small Outline DDR4 module for laptops and compact systems",
                            PhysicalMemtypeName = "DDR4 SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Small Outline DDR5 module for laptops and compact systems",
                            PhysicalMemtypeName = "DDR5 SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low voltage DDR3 SDRAM (1.35V) for energy efficiency",
                            PhysicalMemtypeName = "DDR3L",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low voltage DDR3 SODIMM for mobile devices",
                            PhysicalMemtypeName = "DDR3L SODIMM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low voltage DDR4 SDRAM (1.2V) for energy efficiency",
                            PhysicalMemtypeName = "DDR4L",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Error-Correcting Code DDR3 for servers and workstations",
                            PhysicalMemtypeName = "ECC DDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Error-Correcting Code DDR4 for servers and workstations",
                            PhysicalMemtypeName = "ECC DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Error-Correcting Code DDR5 for servers and workstations",
                            PhysicalMemtypeName = "ECC DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Buffered DDR3 for high-capacity server configurations",
                            PhysicalMemtypeName = "Registered DDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Buffered DDR4 for high-capacity server configurations",
                            PhysicalMemtypeName = "Registered DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Buffered DDR5 for high-capacity server configurations",
                            PhysicalMemtypeName = "Registered DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "LR-DIMM DDR4 for maximum density server memory",
                            PhysicalMemtypeName = "Load-Reduced DDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "LR-DIMM DDR5 for maximum density server memory",
                            PhysicalMemtypeName = "Load-Reduced DDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Synchronous Dynamic RAM - Legacy memory type",
                            PhysicalMemtypeName = "SDRAM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Extended Data Out RAM - Obsolete legacy memory",
                            PhysicalMemtypeName = "EDO RAM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Fast Page Mode RAM - Obsolete legacy memory",
                            PhysicalMemtypeName = "FPM RAM",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Graphics DDR5 - Specialized memory for graphics cards",
                            PhysicalMemtypeName = "GDDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Graphics DDR6 - High-speed graphics card memory",
                            PhysicalMemtypeName = "GDDR6",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Graphics DDR6X - Enhanced graphics memory",
                            PhysicalMemtypeName = "GDDR6X",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "High Bandwidth Memory 2 - Stacked memory for GPUs",
                            PhysicalMemtypeName = "HBM2",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "High Bandwidth Memory 2e - Enhanced HBM2",
                            PhysicalMemtypeName = "HBM2e",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "High Bandwidth Memory 3 - Latest high-performance stacked memory",
                            PhysicalMemtypeName = "HBM3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR3 - Mobile device optimized memory",
                            PhysicalMemtypeName = "LPDDR3",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR4 - Smartphone and tablet memory",
                            PhysicalMemtypeName = "LPDDR4",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR4X - Enhanced efficiency mobile memory",
                            PhysicalMemtypeName = "LPDDR4X",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR5 - Latest generation mobile memory",
                            PhysicalMemtypeName = "LPDDR5",
                            Version = 1
                        },
                        new
                        {
                            PhysicalMemtypeId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(241), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            PhysicalMemtypeDescription = "Low Power DDR5X - Enhanced LPDDR5 for flagship devices",
                            PhysicalMemtypeName = "LPDDR5X",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("program_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("LegacyProgramName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("legacy_program_name")
                        .HasComment("Historical/legacy program name");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<int?>("ProgramManagerId")
                        .HasColumnType("int")
                        .HasColumnName("program_manager")
                        .HasComment("User ID of program manager (nullable until data available)");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("program_name")
                        .HasComment("Current program name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("ProgramId")
                        .HasName("PK_program");

                    b.HasIndex("LegacyProgramName")
                        .HasDatabaseName("IX_program_legacy_name");

                    b.HasIndex("ProgramId")
                        .HasDatabaseName("IX_program_asset_lookup");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("ProgramId"), new[] { "ProgramName", "LegacyProgramName" });

                    b.HasIndex("ProgramManagerId");

                    b.HasIndex("ProgramName")
                        .IsUnique()
                        .HasDatabaseName("UX_program_name");

                    b.ToTable("program", null, t =>
                        {
                            t.HasComment("DoD programs that own/manage industrial assets");
                        });

                    b.HasData(
                        new
                        {
                            ProgramId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Patriot",
                            ProgramName = "IFMC",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Himars",
                            ProgramName = "STORM",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "TOW",
                            ProgramName = "TAGM",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Avenger",
                            ProgramName = "SHIELD",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "MULTI",
                            ProgramName = "MULTI",
                            Version = 1
                        },
                        new
                        {
                            ProgramId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LegacyProgramName = "Sentinel",
                            ProgramName = "STARE",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name")
                        .HasComment("Unique role name for the system");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("RoleId")
                        .HasName("PK_role");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasDatabaseName("UX_role_name");

                    b.ToTable("role", null, t =>
                        {
                            t.HasComment("User roles for RBAC implementation - DoD compliant");
                        });

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4146), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "system",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4147), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "cyber_user",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4148), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "tem_user",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4149), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "dev_user",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4150), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "cyber_mgr",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4151), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "tem_mgr",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4153), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "org_mgr",
                            Version = 1
                        },
                        new
                        {
                            RoleId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 901, DateTimeKind.Unspecified).AddTicks(4154), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            RoleName = "sys_admin",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("building_id")
                        .HasComment("Building where room is located");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("FloorId")
                        .HasColumnType("int")
                        .HasColumnName("floor_id")
                        .HasComment("Floor where room is located");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_name")
                        .HasComment("Room name or identifier");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("RoomId")
                        .HasName("PK_room");

                    b.HasIndex("BuildingId")
                        .HasDatabaseName("IX_room_building");

                    b.HasIndex("FloorId")
                        .HasDatabaseName("IX_room_floor");

                    b.HasIndex("RoomName")
                        .HasDatabaseName("IX_room_name");

                    b.HasIndex("BuildingId", "FloorId")
                        .HasDatabaseName("IX_room_building_floor");

                    b.ToTable("room", null, t =>
                        {
                            t.HasComment("Specific rooms within buildings, identified by building and floor");
                        });

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            BuildingId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorId = 3,
                            RoomName = "High Power Room",
                            Version = 1
                        },
                        new
                        {
                            RoomId = 2,
                            BuildingId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            FloorId = 3,
                            RoomName = "DLU Garage Oversight Bay",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.SmeRole", b =>
                {
                    b.Property<int>("SmeRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("smerole_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SmeRoleId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("SmeRoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("smerole_name")
                        .HasComment("Unique SME role/specialization name");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("SmeRoleId")
                        .HasName("PK_sme_role");

                    b.HasIndex("SmeRoleName")
                        .IsUnique()
                        .HasDatabaseName("UX_sme_role_name");

                    b.ToTable("sme_role", null, t =>
                        {
                            t.HasComment("Subject Matter Expert roles for specialized expertise designation");
                        });

                    b.HasData(
                        new
                        {
                            SmeRoleId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Change Management Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Vulnerability Management Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Access Control Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Risk Management Framework Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Database Management Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "SAN Environment & Virtualization Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Linux Environment Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Windows Environment Specialist",
                            Version = 1
                        },
                        new
                        {
                            SmeRoleId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            SmeRoleName = "Legacy Environment Specialist",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.SoftwareManufacturer", b =>
                {
                    b.Property<int>("SoftwareManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("software_manufacturer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareManufacturerId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("IconFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("swmanu_icon_file")
                        .HasComment("Filename of manufacturer icon/logo in wwwroot/images/sw_manufacturers/");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("ProductionFocus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("swmanu_production_focus")
                        .HasComment("Primary production focus or specialization");

                    b.Property<string>("SoftwareManufacturerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("software_manufacturer_name")
                        .HasComment("Name of the software manufacturer or vendor");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("SoftwareManufacturerId")
                        .HasName("PK_software_manufacturer");

                    b.HasIndex("ProductionFocus")
                        .HasDatabaseName("IX_software_manufacturer_focus");

                    b.HasIndex("SoftwareManufacturerName")
                        .HasDatabaseName("IX_software_manufacturer_name");

                    b.HasIndex("SoftwareManufacturerName", "ProductionFocus")
                        .HasDatabaseName("IX_software_manufacturer_name_focus");

                    b.ToTable("software_manufacturer", null, t =>
                        {
                            t.HasComment("Software manufacturers and vendors with production focus for software asset management");
                        });

                    b.HasData(
                        new
                        {
                            SoftwareManufacturerId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "OS Software & Productivity",
                            SoftwareManufacturerName = "Microsoft",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "OS Software & Hardware",
                            SoftwareManufacturerName = "Apple",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud & Software Services",
                            SoftwareManufacturerName = "Google",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Linux & Open Source",
                            SoftwareManufacturerName = "Red Hat",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Linux",
                            SoftwareManufacturerName = "SUSE",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Ubuntu Linux",
                            SoftwareManufacturerName = "Canonical",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Virtualization & Cloud",
                            SoftwareManufacturerName = "VMware",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Virtualization & Networking",
                            SoftwareManufacturerName = "Citrix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Database & Enterprise Software",
                            SoftwareManufacturerName = "Oracle",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise & Cloud Solutions",
                            SoftwareManufacturerName = "IBM",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Embedded OS",
                            SoftwareManufacturerName = "Wind River Systems",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Resource Planning",
                            SoftwareManufacturerName = "SAP",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "CRM & Cloud Services",
                            SoftwareManufacturerName = "Salesforce",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Service Management",
                            SoftwareManufacturerName = "ServiceNow",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "HR & Finance Software",
                            SoftwareManufacturerName = "Workday",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "Infor",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "Epicor",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "IFS",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "QAD",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Business Management Software",
                            SoftwareManufacturerName = "Sage",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Financial Software",
                            SoftwareManufacturerName = "Intuit",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Accounting Software",
                            SoftwareManufacturerName = "Xero",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Accounting Software",
                            SoftwareManufacturerName = "FreshBooks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Financial Software",
                            SoftwareManufacturerName = "Wave Accounting",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Expense Management",
                            SoftwareManufacturerName = "Expensify",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Financial Automation",
                            SoftwareManufacturerName = "Bill.com",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Payroll & HR Services",
                            SoftwareManufacturerName = "ADP",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Payroll Services",
                            SoftwareManufacturerName = "Paychex",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Conferencing",
                            SoftwareManufacturerName = "Zoom",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Networking & Communications",
                            SoftwareManufacturerName = "Cisco",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Communications",
                            SoftwareManufacturerName = "RingCentral",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Communications",
                            SoftwareManufacturerName = "8x8",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Communications Platform",
                            SoftwareManufacturerName = "Vonage",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Communications APIs",
                            SoftwareManufacturerName = "Twilio",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Marketing",
                            SoftwareManufacturerName = "Constant Contact",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Marketing",
                            SoftwareManufacturerName = "Campaign Monitor",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Marketing",
                            SoftwareManufacturerName = "AWeber",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Team Collaboration",
                            SoftwareManufacturerName = "Slack Technologies",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Communications Platform",
                            SoftwareManufacturerName = "Discord",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Platform",
                            SoftwareManufacturerName = "Shopify",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Web Publishing",
                            SoftwareManufacturerName = "Automattic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Platform",
                            SoftwareManufacturerName = "BigCommerce",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Website Builder",
                            SoftwareManufacturerName = "Squarespace",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Website Builder",
                            SoftwareManufacturerName = "Wix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Marketplace",
                            SoftwareManufacturerName = "Etsy",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud & E-commerce",
                            SoftwareManufacturerName = "Amazon",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Marketplace",
                            SoftwareManufacturerName = "eBay",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "E-commerce Platform",
                            SoftwareManufacturerName = "PrestaShop",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare IT",
                            SoftwareManufacturerName = "MEDITECH",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare Software",
                            SoftwareManufacturerName = "Epic Systems",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare IT",
                            SoftwareManufacturerName = "Cerner",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare Software",
                            SoftwareManufacturerName = "Allscripts",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Healthcare Services",
                            SoftwareManufacturerName = "athenahealth",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Design & Engineering Software",
                            SoftwareManufacturerName = "Autodesk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Software",
                            SoftwareManufacturerName = "Bentley Systems",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Industrial Software",
                            SoftwareManufacturerName = "AVEVA",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Industrial Automation",
                            SoftwareManufacturerName = "Rockwell Automation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Energy Management",
                            SoftwareManufacturerName = "Schneider Electric",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Industrial Solutions",
                            SoftwareManufacturerName = "Honeywell",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Automation Solutions",
                            SoftwareManufacturerName = "Emerson",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "3D Design Software",
                            SoftwareManufacturerName = "Dassault Systèmes",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Product Lifecycle Management",
                            SoftwareManufacturerName = "PTC",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Digital Industries Software",
                            SoftwareManufacturerName = "Siemens",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Simulation Software",
                            SoftwareManufacturerName = "Ansys",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Positioning Technology",
                            SoftwareManufacturerName = "Trimble",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "GIS Software",
                            SoftwareManufacturerName = "Esri",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Open Source Software",
                            SoftwareManufacturerName = "Mozilla Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 68,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Open Source Collaboration",
                            SoftwareManufacturerName = "Linux Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 69,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Open Source Software",
                            SoftwareManufacturerName = "Apache Software Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 70,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Database Software",
                            SoftwareManufacturerName = "PostgreSQL Global Development",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 71,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Database Software",
                            SoftwareManufacturerName = "MariaDB Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 72,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Content Management",
                            SoftwareManufacturerName = "Drupal Association",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 73,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Content Management",
                            SoftwareManufacturerName = "WordPress Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 74,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Infrastructure",
                            SoftwareManufacturerName = "OpenStack Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 75,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Office Software",
                            SoftwareManufacturerName = "LibreOffice Foundation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 76,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Artificial Intelligence",
                            SoftwareManufacturerName = "OpenAI",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 77,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AI Safety",
                            SoftwareManufacturerName = "Anthropic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 78,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AI Research",
                            SoftwareManufacturerName = "DeepMind",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 79,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AI Computing Platform",
                            SoftwareManufacturerName = "NVIDIA",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 80,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "AutoML Platform",
                            SoftwareManufacturerName = "DataRobot",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 81,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Machine Learning Platform",
                            SoftwareManufacturerName = "H2O.ai",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 82,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Analytics",
                            SoftwareManufacturerName = "Alteryx",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 83,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Science Platform",
                            SoftwareManufacturerName = "Dataiku",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 84,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Analytics Platform",
                            SoftwareManufacturerName = "Palantir",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 85,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise AI",
                            SoftwareManufacturerName = "C3.ai",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 86,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Robotic Process Automation",
                            SoftwareManufacturerName = "UiPath",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 87,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "RPA Platform",
                            SoftwareManufacturerName = "Automation Anywhere",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 88,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Intelligent Automation",
                            SoftwareManufacturerName = "Blue Prism",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 89,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Desktop Virtualization",
                            SoftwareManufacturerName = "Parallels",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 90,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Hybrid Cloud Infrastructure",
                            SoftwareManufacturerName = "Nutanix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 91,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Container Platform",
                            SoftwareManufacturerName = "Docker",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 92,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Container Orchestration",
                            SoftwareManufacturerName = "Kubernetes",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 93,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Protection",
                            SoftwareManufacturerName = "Veeam",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 94,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Management",
                            SoftwareManufacturerName = "Commvault",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 95,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Protection",
                            SoftwareManufacturerName = "Veritas",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 96,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cyber Protection",
                            SoftwareManufacturerName = "Acronis",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 97,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Data Protection",
                            SoftwareManufacturerName = "Druva",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 98,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Data Management",
                            SoftwareManufacturerName = "Rubrik",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 99,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Management Platform",
                            SoftwareManufacturerName = "Cohesity",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 100,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Management",
                            SoftwareManufacturerName = "SolarWinds",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 101,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Management",
                            SoftwareManufacturerName = "ManageEngine",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 102,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Network Monitoring",
                            SoftwareManufacturerName = "Paessler",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 103,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Monitoring",
                            SoftwareManufacturerName = "Nagios",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 104,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Monitoring Solution",
                            SoftwareManufacturerName = "Zabbix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 105,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Application Development",
                            SoftwareManufacturerName = "Progress",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 106,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Asset Management",
                            SoftwareManufacturerName = "Lansweeper",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 107,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Mobile App Framework",
                            SoftwareManufacturerName = "Ionic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 108,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Mobile Development",
                            SoftwareManufacturerName = "Appcelerator",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 109,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Content Management",
                            SoftwareManufacturerName = "Joomla",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 110,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Digital Experience Platform",
                            SoftwareManufacturerName = "Sitecore",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 111,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Headless CMS",
                            SoftwareManufacturerName = "Contentful",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 112,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Headless CMS",
                            SoftwareManufacturerName = "Strapi",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 113,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "NoSQL Database",
                            SoftwareManufacturerName = "MongoDB",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 114,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Data Warehouse",
                            SoftwareManufacturerName = "Snowflake",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 115,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Lakehouse Platform",
                            SoftwareManufacturerName = "Databricks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 116,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Visualization",
                            SoftwareManufacturerName = "Tableau",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 117,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Business Intelligence",
                            SoftwareManufacturerName = "Qlik",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 118,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Analytics Software",
                            SoftwareManufacturerName = "SAS Institute",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 119,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Analytics",
                            SoftwareManufacturerName = "Teradata",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 120,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "NoSQL Database",
                            SoftwareManufacturerName = "MarkLogic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 121,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Graph Database",
                            SoftwareManufacturerName = "Neo4j",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 122,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Distributed Database",
                            SoftwareManufacturerName = "DataStax",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 123,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Time Series Database",
                            SoftwareManufacturerName = "InfluxData",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 124,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Search & Analytics",
                            SoftwareManufacturerName = "Elastic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 125,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Endpoint Protection",
                            SoftwareManufacturerName = "CrowdStrike",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 126,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Endpoint Security",
                            SoftwareManufacturerName = "SentinelOne",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 127,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Network Security",
                            SoftwareManufacturerName = "Palo Alto Networks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 128,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Network Security",
                            SoftwareManufacturerName = "Fortinet",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 129,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cyber Security",
                            SoftwareManufacturerName = "Check Point",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 130,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Enterprise Software",
                            SoftwareManufacturerName = "Broadcom",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 131,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Security Software",
                            SoftwareManufacturerName = "McAfee",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 132,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cybersecurity",
                            SoftwareManufacturerName = "Trend Micro",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 133,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Security Software",
                            SoftwareManufacturerName = "Kaspersky",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 134,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cybersecurity",
                            SoftwareManufacturerName = "Bitdefender",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 135,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "IT Security",
                            SoftwareManufacturerName = "ESET",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 136,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cyber Security",
                            SoftwareManufacturerName = "F-Secure",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 137,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cybersecurity",
                            SoftwareManufacturerName = "Sophos",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 138,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Security Analytics",
                            SoftwareManufacturerName = "Rapid7",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 139,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Security",
                            SoftwareManufacturerName = "Qualys",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 140,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Vulnerability Management",
                            SoftwareManufacturerName = "Tenable",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 141,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Application Security",
                            SoftwareManufacturerName = "Veracode",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 142,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Identity Management",
                            SoftwareManufacturerName = "Okta",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 143,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Identity Security",
                            SoftwareManufacturerName = "Ping Identity",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 144,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Privileged Access Security",
                            SoftwareManufacturerName = "CyberArk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 145,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Privileged Access Management",
                            SoftwareManufacturerName = "BeyondTrust",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 146,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Security",
                            SoftwareManufacturerName = "Varonis",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 147,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Security",
                            SoftwareManufacturerName = "Proofpoint",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 148,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Email Security",
                            SoftwareManufacturerName = "Mimecast",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 149,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Security",
                            SoftwareManufacturerName = "Zscaler",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 150,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Web Infrastructure & Security",
                            SoftwareManufacturerName = "Cloudflare",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 151,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Development Tools",
                            SoftwareManufacturerName = "JetBrains",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 152,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Collaboration Software",
                            SoftwareManufacturerName = "Atlassian",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 153,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Development Platform",
                            SoftwareManufacturerName = "GitHub",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 154,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "DevOps Platform",
                            SoftwareManufacturerName = "GitLab",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 155,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Automation Server",
                            SoftwareManufacturerName = "Jenkins",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 156,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Automation",
                            SoftwareManufacturerName = "HashiCorp",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 157,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Configuration Management",
                            SoftwareManufacturerName = "Puppet",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 158,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Infrastructure Automation",
                            SoftwareManufacturerName = "Chef Software",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 159,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Data Platform",
                            SoftwareManufacturerName = "Splunk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 160,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Observability Platform",
                            SoftwareManufacturerName = "New Relic",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 161,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Monitoring & Analytics",
                            SoftwareManufacturerName = "Datadog",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 162,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Application Performance",
                            SoftwareManufacturerName = "AppDynamics",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 163,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Software Intelligence",
                            SoftwareManufacturerName = "Dynatrace",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 164,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Incident Management",
                            SoftwareManufacturerName = "PagerDuty",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 165,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Game Development Platform",
                            SoftwareManufacturerName = "Unity Technologies",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 166,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Game Engine & Platform",
                            SoftwareManufacturerName = "Epic Games",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 167,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Computing",
                            SoftwareManufacturerName = "Alibaba Cloud",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 168,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Infrastructure",
                            SoftwareManufacturerName = "DigitalOcean",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 169,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Hosting",
                            SoftwareManufacturerName = "Linode",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 170,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Infrastructure",
                            SoftwareManufacturerName = "Vultr",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 171,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Services",
                            SoftwareManufacturerName = "OVHcloud",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 172,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Managed Cloud",
                            SoftwareManufacturerName = "Rackspace",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 173,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Creative Software",
                            SoftwareManufacturerName = "Adobe",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 174,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Graphics Software",
                            SoftwareManufacturerName = "Corel",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 175,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Productivity Platform",
                            SoftwareManufacturerName = "Notion",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 176,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Remote Access Software",
                            SoftwareManufacturerName = "LogMeIn",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 177,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Storage",
                            SoftwareManufacturerName = "Dropbox",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 178,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Cloud Content Management",
                            SoftwareManufacturerName = "Box",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 179,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "3D Software",
                            SoftwareManufacturerName = "Maxon",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 180,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Visual Effects Software",
                            SoftwareManufacturerName = "Foundry",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 181,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Production",
                            SoftwareManufacturerName = "Blackmagic Design",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 182,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Media Production",
                            SoftwareManufacturerName = "Avid Technology",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 183,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Electronic Arts",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 184,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Activision Blizzard",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 185,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Ubisoft",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 186,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Gaming Platform",
                            SoftwareManufacturerName = "Valve Corporation",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 187,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Riot Games",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 188,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Take-Two Interactive",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 189,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Bethesda Game Studios",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 190,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "CD Projekt",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 191,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Square Enix",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 192,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Capcom",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 193,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Konami",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 194,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Video Games",
                            SoftwareManufacturerName = "Bandai Namco",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 195,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Marketing Platform",
                            SoftwareManufacturerName = "HubSpot",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 196,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Customer Service",
                            SoftwareManufacturerName = "Zendesk",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 197,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Customer Engagement",
                            SoftwareManufacturerName = "Freshworks",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 198,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Business Software",
                            SoftwareManufacturerName = "Zoho",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 199,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Sales CRM",
                            SoftwareManufacturerName = "Pipedrive",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 200,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Work Management",
                            SoftwareManufacturerName = "Monday.com",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 201,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Project Management",
                            SoftwareManufacturerName = "Asana",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 202,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Work Management",
                            SoftwareManufacturerName = "Smartsheet",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 203,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Low-Code Platform",
                            SoftwareManufacturerName = "Airtable",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 204,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Productivity Platform",
                            SoftwareManufacturerName = "ClickUp",
                            Version = 1
                        },
                        new
                        {
                            SoftwareManufacturerId = 205,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ProductionFocus = "Project Management",
                            SoftwareManufacturerName = "Basecamp",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.SysArchitecture", b =>
                {
                    b.Property<int>("SysArchitectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sys_architecture_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SysArchitectureId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("SysArchitectureDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("sys_architecture_description")
                        .HasComment("Detailed description of the architecture and its use cases");

                    b.Property<string>("SystemArchitecture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("system_architecture")
                        .HasComment("Architecture/instruction set name or designation");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("SysArchitectureId")
                        .HasName("PK_sys_architecture");

                    b.HasIndex("SystemArchitecture")
                        .IsUnique()
                        .HasDatabaseName("IX_sys_architecture_name");

                    b.ToTable("sys_architecture", null, t =>
                        {
                            t.HasComment("System architectures and instruction sets for hardware platform categorization");
                        });

                    b.HasData(
                        new
                        {
                            SysArchitectureId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit Intel architecture based on 8086 processor family; also known as i386 or IA-32",
                            SystemArchitecture = "x86",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit extension of x86 architecture; also known as x64 AMD64 or Intel 64",
                            SystemArchitecture = "x86_64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit RISC architecture widely used in mobile devices and embedded systems",
                            SystemArchitecture = "ARM",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit ARM architecture; also known as AArch64 or ARMv8",
                            SystemArchitecture = "ARM64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Intel Itanium 64-bit architecture designed for enterprise servers; now largely discontinued",
                            SystemArchitecture = "IA-64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "RISC architecture developed by Apple IBM and Motorola; used in older Macs and gaming consoles",
                            SystemArchitecture = "PowerPC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Scalable Processor Architecture; RISC architecture used primarily in Oracle/Sun enterprise systems",
                            SystemArchitecture = "SPARC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Microprocessor without Interlocked Pipeline Stages; RISC architecture used in embedded systems and routers",
                            SystemArchitecture = "MIPS",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Open-source RISC instruction set architecture gaining adoption in various applications",
                            SystemArchitecture = "RISC-V",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit RISC architecture developed by DEC; discontinued but historically significant",
                            SystemArchitecture = "Alpha",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Precision Architecture RISC developed by HP for Unix workstations and servers",
                            SystemArchitecture = "PA-RISC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit IBM System/390 mainframe architecture; also known as z/Architecture",
                            SystemArchitecture = "s390x",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Motorola 68000 series architecture; used in early Apple Macintosh and Amiga computers",
                            SystemArchitecture = "m68k",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit version of MIPS architecture used in high-performance embedded systems",
                            SystemArchitecture = "MIPS64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit version of PowerPC architecture; used in IBM Power Systems",
                            SystemArchitecture = "PowerPC64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit ARM architecture version 7; common in smartphones and tablets from 2010s",
                            SystemArchitecture = "ARMv7",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "ARM architecture version 8; introduced 64-bit support and used in modern mobile devices",
                            SystemArchitecture = "ARMv8",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Intel 80386 32-bit architecture; synonym for x86",
                            SystemArchitecture = "i386",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Intel Pentium Pro and later 32-bit x86 processors with enhanced instruction sets",
                            SystemArchitecture = "i686",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "AMD's implementation of 64-bit x86 architecture; synonym for x86_64",
                            SystemArchitecture = "amd64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "32-bit version of open-source RISC-V architecture",
                            SystemArchitecture = "RISC-V 32",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "64-bit version of open-source RISC-V architecture",
                            SystemArchitecture = "RISC-V 64",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "ARM architecture version 6; used in devices like Raspberry Pi 1 and earlier smartphones",
                            SystemArchitecture = "ARMv6",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "ARM architecture version 5; used in older embedded systems and early smartphones",
                            SystemArchitecture = "ARMv5",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "RISC architecture developed by Hitachi; used in embedded systems and Sega gaming consoles",
                            SystemArchitecture = "SuperH",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Configurable processor architecture by Tensilica; used in IoT and embedded devices",
                            SystemArchitecture = "Xtensa",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Open-source RISC architecture for embedded systems",
                            SystemArchitecture = "OpenRISC",
                            Version = 1
                        },
                        new
                        {
                            SysArchitectureId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2025, 9, 29, 23, 25, 20, 902, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            ModifiedBy = 1,
                            SysArchitectureDescription = "Argonaut RISC Core; synthesizable processor architecture for embedded applications",
                            SystemArchitecture = "ARC",
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<byte>("AccountStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("user_account_status")
                        .HasComment("Account status: 0=Inactive, 1=Active, 2=Suspended, 3=Locked");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_affiliation")
                        .HasComment("Military branch or civilian agency");

                    b.Property<DateTimeOffset?>("CacExpiry")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("user_cac_expiry")
                        .HasComment("CAC certificate expiration date");

                    b.Property<string>("CertificateDn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_certificate_dn")
                        .HasComment("Distinguished Name from CAC certificate");

                    b.Property<string>("CertificateSerial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_certificate_serial")
                        .HasComment("Certificate serial number for tracking");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<long>("DodId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_dodid")
                        .HasComment("10-digit DoD ID number (EDIPI) for CAC authentication");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_email")
                        .HasComment("User's email address - must be unique");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_first")
                        .HasComment("User's first name");

                    b.Property<DateTimeOffset?>("LastCacAuth")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("user_last_cac_auth")
                        .HasComment("Timestamp of last successful CAC authentication");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_last")
                        .HasComment("User's last name");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("PersonDesignator")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_person_designator")
                        .HasComment("Personnel type: MILITARY, CIVILIAN, CONTRACTOR");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_phone")
                        .HasComment("User's phone number - optional");

                    b.Property<string>("PivAuthCertHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("user_piv_auth_cert_hash")
                        .HasComment("SHA-256 hash of PIV certificate for pinning (MITM protection)");

                    b.Property<bool>("RequiresCac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("user_requires_cac")
                        .HasComment("Whether CAC authentication is mandatory for this user");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("user_role")
                        .HasComment("Primary role assignment (required)");

                    b.Property<int?>("SmeRoleId")
                        .HasColumnType("int")
                        .HasColumnName("sme_role")
                        .HasComment("Subject Matter Expert role (optional)");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("UserId")
                        .HasName("PK_user");

                    b.HasIndex("AccountStatus")
                        .HasDatabaseName("IX_user_account_status")
                        .HasFilter("[user_account_status] = 1");

                    b.HasIndex("CertificateDn")
                        .HasDatabaseName("IX_user_certificate_dn");

                    b.HasIndex("DodId")
                        .IsUnique()
                        .HasDatabaseName("UX_user_dodid");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UX_user_email");

                    b.HasIndex("SmeRoleId")
                        .HasDatabaseName("IX_user_smerole")
                        .HasFilter("[sme_role] IS NOT NULL");

                    b.HasIndex("RoleId", "AccountStatus")
                        .HasDatabaseName("IX_user_role_status");

                    b.ToTable("user", null, t =>
                        {
                            t.HasComment("System users with CAC authentication support for DoD compliance");
                        });

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AccountStatus = (byte)1,
                            Affiliation = "SYSTEM",
                            CertificateDn = "CN=SYSTEM,OU=IAMSNG,O=DoD,C=US",
                            CertificateSerial = "SYSTEM-ACCOUNT-NO-LOGIN",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            DodId = 0L,
                            Email = "system@iamsng.local",
                            FirstName = "SYSTEM",
                            LastName = "ACCOUNT",
                            PersonDesignator = "SYSTEM",
                            RequiresCac = false,
                            RoleId = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("iamsng.Core.Entities.CpuType", b =>
                {
                    b.HasOne("iamsng.Core.Entities.HardwareManufacturer", "HardwareManufacturer")
                        .WithMany()
                        .HasForeignKey("HardwareManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_cpu_type_hardware_manufacturer");

                    b.Navigation("HardwareManufacturer");
                });

            modelBuilder.Entity("iamsng.Core.Entities.GpuType", b =>
                {
                    b.HasOne("iamsng.Core.Entities.HardwareManufacturer", "HardwareManufacturer")
                        .WithMany()
                        .HasForeignKey("HardwareManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_gpu_types_hardware_manufacturer");

                    b.Navigation("HardwareManufacturer");
                });

            modelBuilder.Entity("iamsng.Core.Entities.MotherboardType", b =>
                {
                    b.HasOne("iamsng.Core.Entities.HardwareManufacturer", "HardwareManufacturer")
                        .WithMany()
                        .HasForeignKey("HardwareManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HardwareManufacturer");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Program", b =>
                {
                    b.HasOne("iamsng.Core.Entities.User", "ProgramManager")
                        .WithMany()
                        .HasForeignKey("ProgramManagerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_program_manager_user");

                    b.Navigation("ProgramManager");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Room", b =>
                {
                    b.HasOne("iamsng.Core.Entities.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_room_building");

                    b.HasOne("iamsng.Core.Entities.Floor", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_room_floor");

                    b.Navigation("Building");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("iamsng.Core.Entities.User", b =>
                {
                    b.HasOne("iamsng.Core.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_user_role");

                    b.HasOne("iamsng.Core.Entities.SmeRole", "SmeRole")
                        .WithMany("Users")
                        .HasForeignKey("SmeRoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_user_smerole");

                    b.Navigation("Role");

                    b.Navigation("SmeRole");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Floor", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("iamsng.Core.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("iamsng.Core.Entities.SmeRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
